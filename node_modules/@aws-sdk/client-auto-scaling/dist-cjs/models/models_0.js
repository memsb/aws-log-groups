"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScheduledUpdateGroupActionRequestFilterSensitiveLog = exports.BatchPutScheduledUpdateGroupActionAnswerFilterSensitiveLog = exports.BatchDeleteScheduledActionTypeFilterSensitiveLog = exports.BatchDeleteScheduledActionAnswerFilterSensitiveLog = exports.FailedScheduledUpdateGroupActionRequestFilterSensitiveLog = exports.AttachLoadBalancerTargetGroupsTypeFilterSensitiveLog = exports.AttachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog = exports.AttachLoadBalancersTypeFilterSensitiveLog = exports.AttachLoadBalancersResultTypeFilterSensitiveLog = exports.AttachInstancesQueryFilterSensitiveLog = exports.AlarmFilterSensitiveLog = exports.AdjustmentTypeFilterSensitiveLog = exports.ActivityTypeFilterSensitiveLog = exports.ActivitiesTypeFilterSensitiveLog = exports.ActivityFilterSensitiveLog = exports.AcceleratorTotalMemoryMiBRequestFilterSensitiveLog = exports.AcceleratorCountRequestFilterSensitiveLog = exports.RefreshStrategy = exports.InstanceRefreshInProgressFault = exports.MetricType = exports.MetricStatistic = exports.PredictiveScalingMode = exports.PredefinedScalingMetricType = exports.PredefinedMetricPairType = exports.PredefinedLoadMetricType = exports.PredictiveScalingMaxCapacityBreachBehavior = exports.InstanceRefreshStatus = exports.InvalidNextToken = exports.WarmPoolStatus = exports.WarmPoolState = exports.LifecycleState = exports.ScalingActivityInProgressFault = exports.ResourceInUseFault = exports.InstanceMetadataHttpTokensState = exports.InstanceMetadataEndpointState = exports.LocalStorageType = exports.LocalStorage = exports.InstanceGeneration = exports.CpuManufacturer = exports.BurstablePerformance = exports.BareMetal = exports.LimitExceededFault = exports.ServiceLinkedRoleFailure = exports.ResourceContentionFault = exports.AlreadyExistsFault = exports.ScalingActivityStatusCode = exports.ActiveInstanceRefreshNotFoundFault = exports.AcceleratorType = exports.AcceleratorName = exports.AcceleratorManufacturer = void 0;
exports.AutoScalingInstanceDetailsFilterSensitiveLog = exports.AutoScalingGroupsTypeFilterSensitiveLog = exports.AutoScalingGroupFilterSensitiveLog = exports.WarmPoolConfigurationFilterSensitiveLog = exports.InstanceReusePolicyFilterSensitiveLog = exports.TagDescriptionFilterSensitiveLog = exports.SuspendedProcessFilterSensitiveLog = exports.InstanceFilterSensitiveLog = exports.EnabledMetricFilterSensitiveLog = exports.AutoScalingGroupNamesTypeFilterSensitiveLog = exports.FilterFilterSensitiveLog = exports.DescribeAdjustmentTypesAnswerFilterSensitiveLog = exports.DescribeAccountLimitsAnswerFilterSensitiveLog = exports.DeleteWarmPoolTypeFilterSensitiveLog = exports.DeleteWarmPoolAnswerFilterSensitiveLog = exports.DeleteTagsTypeFilterSensitiveLog = exports.DeleteScheduledActionTypeFilterSensitiveLog = exports.DeletePolicyTypeFilterSensitiveLog = exports.DeleteNotificationConfigurationTypeFilterSensitiveLog = exports.DeleteLifecycleHookTypeFilterSensitiveLog = exports.DeleteLifecycleHookAnswerFilterSensitiveLog = exports.LaunchConfigurationNameTypeFilterSensitiveLog = exports.DeleteAutoScalingGroupTypeFilterSensitiveLog = exports.CreateOrUpdateTagsTypeFilterSensitiveLog = exports.CreateLaunchConfigurationTypeFilterSensitiveLog = exports.InstanceMetadataOptionsFilterSensitiveLog = exports.InstanceMonitoringFilterSensitiveLog = exports.BlockDeviceMappingFilterSensitiveLog = exports.EbsFilterSensitiveLog = exports.CreateAutoScalingGroupTypeFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.MixedInstancesPolicyFilterSensitiveLog = exports.LaunchTemplateFilterSensitiveLog = exports.LaunchTemplateOverridesFilterSensitiveLog = exports.InstanceRequirementsFilterSensitiveLog = exports.VCpuCountRequestFilterSensitiveLog = exports.TotalLocalStorageGBRequestFilterSensitiveLog = exports.NetworkInterfaceCountRequestFilterSensitiveLog = exports.NetworkBandwidthGbpsRequestFilterSensitiveLog = exports.MemoryMiBRequestFilterSensitiveLog = exports.MemoryGiBPerVCpuRequestFilterSensitiveLog = exports.BaselineEbsBandwidthMbpsRequestFilterSensitiveLog = exports.InstancesDistributionFilterSensitiveLog = exports.LifecycleHookSpecificationFilterSensitiveLog = exports.LaunchTemplateSpecificationFilterSensitiveLog = exports.CompleteLifecycleActionTypeFilterSensitiveLog = exports.CompleteLifecycleActionAnswerFilterSensitiveLog = exports.CancelInstanceRefreshTypeFilterSensitiveLog = exports.CancelInstanceRefreshAnswerFilterSensitiveLog = exports.BatchPutScheduledUpdateGroupActionTypeFilterSensitiveLog = void 0;
exports.DescribeScalingActivitiesTypeFilterSensitiveLog = exports.PoliciesTypeFilterSensitiveLog = exports.ScalingPolicyFilterSensitiveLog = exports.TargetTrackingConfigurationFilterSensitiveLog = exports.PredefinedMetricSpecificationFilterSensitiveLog = exports.CustomizedMetricSpecificationFilterSensitiveLog = exports.StepAdjustmentFilterSensitiveLog = exports.PredictiveScalingConfigurationFilterSensitiveLog = exports.PredictiveScalingMetricSpecificationFilterSensitiveLog = exports.PredictiveScalingPredefinedScalingMetricFilterSensitiveLog = exports.PredictiveScalingPredefinedMetricPairFilterSensitiveLog = exports.PredictiveScalingPredefinedLoadMetricFilterSensitiveLog = exports.PredictiveScalingCustomizedScalingMetricFilterSensitiveLog = exports.PredictiveScalingCustomizedLoadMetricFilterSensitiveLog = exports.PredictiveScalingCustomizedCapacityMetricFilterSensitiveLog = exports.MetricDataQueryFilterSensitiveLog = exports.MetricStatFilterSensitiveLog = exports.MetricFilterSensitiveLog = exports.MetricDimensionFilterSensitiveLog = exports.DescribePoliciesTypeFilterSensitiveLog = exports.DescribeNotificationConfigurationsTypeFilterSensitiveLog = exports.DescribeNotificationConfigurationsAnswerFilterSensitiveLog = exports.NotificationConfigurationFilterSensitiveLog = exports.DescribeMetricCollectionTypesAnswerFilterSensitiveLog = exports.MetricCollectionTypeFilterSensitiveLog = exports.MetricGranularityTypeFilterSensitiveLog = exports.DescribeLoadBalancerTargetGroupsResponseFilterSensitiveLog = exports.LoadBalancerTargetGroupStateFilterSensitiveLog = exports.DescribeLoadBalancerTargetGroupsRequestFilterSensitiveLog = exports.DescribeLoadBalancersResponseFilterSensitiveLog = exports.LoadBalancerStateFilterSensitiveLog = exports.DescribeLoadBalancersRequestFilterSensitiveLog = exports.DescribeLifecycleHookTypesAnswerFilterSensitiveLog = exports.DescribeLifecycleHooksTypeFilterSensitiveLog = exports.DescribeLifecycleHooksAnswerFilterSensitiveLog = exports.LifecycleHookFilterSensitiveLog = exports.LaunchConfigurationsTypeFilterSensitiveLog = exports.LaunchConfigurationFilterSensitiveLog = exports.LaunchConfigurationNamesTypeFilterSensitiveLog = exports.DescribeInstanceRefreshesTypeFilterSensitiveLog = exports.DescribeInstanceRefreshesAnswerFilterSensitiveLog = exports.InstanceRefreshFilterSensitiveLog = exports.InstanceRefreshProgressDetailsFilterSensitiveLog = exports.InstanceRefreshWarmPoolProgressFilterSensitiveLog = exports.InstanceRefreshLivePoolProgressFilterSensitiveLog = exports.RefreshPreferencesFilterSensitiveLog = exports.DesiredConfigurationFilterSensitiveLog = exports.DescribeAutoScalingNotificationTypesAnswerFilterSensitiveLog = exports.DescribeAutoScalingInstancesTypeFilterSensitiveLog = exports.AutoScalingInstancesTypeFilterSensitiveLog = void 0;
exports.UpdateAutoScalingGroupTypeFilterSensitiveLog = exports.TerminateInstanceInAutoScalingGroupTypeFilterSensitiveLog = exports.StartInstanceRefreshTypeFilterSensitiveLog = exports.StartInstanceRefreshAnswerFilterSensitiveLog = exports.SetInstanceProtectionQueryFilterSensitiveLog = exports.SetInstanceProtectionAnswerFilterSensitiveLog = exports.SetInstanceHealthQueryFilterSensitiveLog = exports.SetDesiredCapacityTypeFilterSensitiveLog = exports.ScalingProcessQueryFilterSensitiveLog = exports.RecordLifecycleActionHeartbeatTypeFilterSensitiveLog = exports.RecordLifecycleActionHeartbeatAnswerFilterSensitiveLog = exports.PutWarmPoolTypeFilterSensitiveLog = exports.PutWarmPoolAnswerFilterSensitiveLog = exports.PutScheduledUpdateGroupActionTypeFilterSensitiveLog = exports.PutScalingPolicyTypeFilterSensitiveLog = exports.PolicyARNTypeFilterSensitiveLog = exports.PutNotificationConfigurationTypeFilterSensitiveLog = exports.PutLifecycleHookTypeFilterSensitiveLog = exports.PutLifecycleHookAnswerFilterSensitiveLog = exports.GetPredictiveScalingForecastTypeFilterSensitiveLog = exports.GetPredictiveScalingForecastAnswerFilterSensitiveLog = exports.LoadForecastFilterSensitiveLog = exports.CapacityForecastFilterSensitiveLog = exports.ExitStandbyQueryFilterSensitiveLog = exports.ExitStandbyAnswerFilterSensitiveLog = exports.ExecutePolicyTypeFilterSensitiveLog = exports.EnterStandbyQueryFilterSensitiveLog = exports.EnterStandbyAnswerFilterSensitiveLog = exports.EnableMetricsCollectionQueryFilterSensitiveLog = exports.DisableMetricsCollectionQueryFilterSensitiveLog = exports.DetachLoadBalancerTargetGroupsTypeFilterSensitiveLog = exports.DetachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog = exports.DetachLoadBalancersTypeFilterSensitiveLog = exports.DetachLoadBalancersResultTypeFilterSensitiveLog = exports.DetachInstancesQueryFilterSensitiveLog = exports.DetachInstancesAnswerFilterSensitiveLog = exports.DescribeWarmPoolTypeFilterSensitiveLog = exports.DescribeWarmPoolAnswerFilterSensitiveLog = exports.DescribeTerminationPolicyTypesAnswerFilterSensitiveLog = exports.TagsTypeFilterSensitiveLog = exports.DescribeTagsTypeFilterSensitiveLog = exports.ScheduledActionsTypeFilterSensitiveLog = exports.ScheduledUpdateGroupActionFilterSensitiveLog = exports.DescribeScheduledActionsTypeFilterSensitiveLog = exports.ProcessesTypeFilterSensitiveLog = exports.ProcessTypeFilterSensitiveLog = void 0;
const AutoScalingServiceException_1 = require("./AutoScalingServiceException");
var AcceleratorManufacturer;
(function (AcceleratorManufacturer) {
    AcceleratorManufacturer["AMAZON_WEB_SERVICES"] = "amazon-web-services";
    AcceleratorManufacturer["AMD"] = "amd";
    AcceleratorManufacturer["NVIDIA"] = "nvidia";
    AcceleratorManufacturer["XILINX"] = "xilinx";
})(AcceleratorManufacturer = exports.AcceleratorManufacturer || (exports.AcceleratorManufacturer = {}));
var AcceleratorName;
(function (AcceleratorName) {
    AcceleratorName["A100"] = "a100";
    AcceleratorName["K80"] = "k80";
    AcceleratorName["M60"] = "m60";
    AcceleratorName["RADEON_PRO_V520"] = "radeon-pro-v520";
    AcceleratorName["T4"] = "t4";
    AcceleratorName["V100"] = "v100";
    AcceleratorName["VU9P"] = "vu9p";
})(AcceleratorName = exports.AcceleratorName || (exports.AcceleratorName = {}));
var AcceleratorType;
(function (AcceleratorType) {
    AcceleratorType["FPGA"] = "fpga";
    AcceleratorType["GPU"] = "gpu";
    AcceleratorType["INFERENCE"] = "inference";
})(AcceleratorType = exports.AcceleratorType || (exports.AcceleratorType = {}));
class ActiveInstanceRefreshNotFoundFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "ActiveInstanceRefreshNotFoundFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ActiveInstanceRefreshNotFoundFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ActiveInstanceRefreshNotFoundFault.prototype);
    }
}
exports.ActiveInstanceRefreshNotFoundFault = ActiveInstanceRefreshNotFoundFault;
var ScalingActivityStatusCode;
(function (ScalingActivityStatusCode) {
    ScalingActivityStatusCode["Cancelled"] = "Cancelled";
    ScalingActivityStatusCode["Failed"] = "Failed";
    ScalingActivityStatusCode["InProgress"] = "InProgress";
    ScalingActivityStatusCode["MidLifecycleAction"] = "MidLifecycleAction";
    ScalingActivityStatusCode["PendingSpotBidPlacement"] = "PendingSpotBidPlacement";
    ScalingActivityStatusCode["PreInService"] = "PreInService";
    ScalingActivityStatusCode["Successful"] = "Successful";
    ScalingActivityStatusCode["WaitingForELBConnectionDraining"] = "WaitingForELBConnectionDraining";
    ScalingActivityStatusCode["WaitingForInstanceId"] = "WaitingForInstanceId";
    ScalingActivityStatusCode["WaitingForInstanceWarmup"] = "WaitingForInstanceWarmup";
    ScalingActivityStatusCode["WaitingForSpotInstanceId"] = "WaitingForSpotInstanceId";
    ScalingActivityStatusCode["WaitingForSpotInstanceRequestId"] = "WaitingForSpotInstanceRequestId";
})(ScalingActivityStatusCode = exports.ScalingActivityStatusCode || (exports.ScalingActivityStatusCode = {}));
class AlreadyExistsFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "AlreadyExistsFault",
            $fault: "client",
            ...opts,
        });
        this.name = "AlreadyExistsFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, AlreadyExistsFault.prototype);
    }
}
exports.AlreadyExistsFault = AlreadyExistsFault;
class ResourceContentionFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "ResourceContentionFault",
            $fault: "server",
            ...opts,
        });
        this.name = "ResourceContentionFault";
        this.$fault = "server";
        Object.setPrototypeOf(this, ResourceContentionFault.prototype);
    }
}
exports.ResourceContentionFault = ResourceContentionFault;
class ServiceLinkedRoleFailure extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "ServiceLinkedRoleFailure",
            $fault: "server",
            ...opts,
        });
        this.name = "ServiceLinkedRoleFailure";
        this.$fault = "server";
        Object.setPrototypeOf(this, ServiceLinkedRoleFailure.prototype);
    }
}
exports.ServiceLinkedRoleFailure = ServiceLinkedRoleFailure;
class LimitExceededFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededFault",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededFault.prototype);
    }
}
exports.LimitExceededFault = LimitExceededFault;
var BareMetal;
(function (BareMetal) {
    BareMetal["EXCLUDED"] = "excluded";
    BareMetal["INCLUDED"] = "included";
    BareMetal["REQUIRED"] = "required";
})(BareMetal = exports.BareMetal || (exports.BareMetal = {}));
var BurstablePerformance;
(function (BurstablePerformance) {
    BurstablePerformance["EXCLUDED"] = "excluded";
    BurstablePerformance["INCLUDED"] = "included";
    BurstablePerformance["REQUIRED"] = "required";
})(BurstablePerformance = exports.BurstablePerformance || (exports.BurstablePerformance = {}));
var CpuManufacturer;
(function (CpuManufacturer) {
    CpuManufacturer["AMAZON_WEB_SERVICES"] = "amazon-web-services";
    CpuManufacturer["AMD"] = "amd";
    CpuManufacturer["INTEL"] = "intel";
})(CpuManufacturer = exports.CpuManufacturer || (exports.CpuManufacturer = {}));
var InstanceGeneration;
(function (InstanceGeneration) {
    InstanceGeneration["CURRENT"] = "current";
    InstanceGeneration["PREVIOUS"] = "previous";
})(InstanceGeneration = exports.InstanceGeneration || (exports.InstanceGeneration = {}));
var LocalStorage;
(function (LocalStorage) {
    LocalStorage["EXCLUDED"] = "excluded";
    LocalStorage["INCLUDED"] = "included";
    LocalStorage["REQUIRED"] = "required";
})(LocalStorage = exports.LocalStorage || (exports.LocalStorage = {}));
var LocalStorageType;
(function (LocalStorageType) {
    LocalStorageType["HDD"] = "hdd";
    LocalStorageType["SSD"] = "ssd";
})(LocalStorageType = exports.LocalStorageType || (exports.LocalStorageType = {}));
var InstanceMetadataEndpointState;
(function (InstanceMetadataEndpointState) {
    InstanceMetadataEndpointState["Disabled"] = "disabled";
    InstanceMetadataEndpointState["Enabled"] = "enabled";
})(InstanceMetadataEndpointState = exports.InstanceMetadataEndpointState || (exports.InstanceMetadataEndpointState = {}));
var InstanceMetadataHttpTokensState;
(function (InstanceMetadataHttpTokensState) {
    InstanceMetadataHttpTokensState["Optional"] = "optional";
    InstanceMetadataHttpTokensState["Required"] = "required";
})(InstanceMetadataHttpTokensState = exports.InstanceMetadataHttpTokensState || (exports.InstanceMetadataHttpTokensState = {}));
class ResourceInUseFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "ResourceInUseFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseFault.prototype);
    }
}
exports.ResourceInUseFault = ResourceInUseFault;
class ScalingActivityInProgressFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "ScalingActivityInProgressFault",
            $fault: "client",
            ...opts,
        });
        this.name = "ScalingActivityInProgressFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, ScalingActivityInProgressFault.prototype);
    }
}
exports.ScalingActivityInProgressFault = ScalingActivityInProgressFault;
var LifecycleState;
(function (LifecycleState) {
    LifecycleState["DETACHED"] = "Detached";
    LifecycleState["DETACHING"] = "Detaching";
    LifecycleState["ENTERING_STANDBY"] = "EnteringStandby";
    LifecycleState["IN_SERVICE"] = "InService";
    LifecycleState["PENDING"] = "Pending";
    LifecycleState["PENDING_PROCEED"] = "Pending:Proceed";
    LifecycleState["PENDING_WAIT"] = "Pending:Wait";
    LifecycleState["QUARANTINED"] = "Quarantined";
    LifecycleState["STANDBY"] = "Standby";
    LifecycleState["TERMINATED"] = "Terminated";
    LifecycleState["TERMINATING"] = "Terminating";
    LifecycleState["TERMINATING_PROCEED"] = "Terminating:Proceed";
    LifecycleState["TERMINATING_WAIT"] = "Terminating:Wait";
    LifecycleState["WARMED_HIBERNATED"] = "Warmed:Hibernated";
    LifecycleState["WARMED_PENDING"] = "Warmed:Pending";
    LifecycleState["WARMED_PENDING_PROCEED"] = "Warmed:Pending:Proceed";
    LifecycleState["WARMED_PENDING_WAIT"] = "Warmed:Pending:Wait";
    LifecycleState["WARMED_RUNNING"] = "Warmed:Running";
    LifecycleState["WARMED_STOPPED"] = "Warmed:Stopped";
    LifecycleState["WARMED_TERMINATED"] = "Warmed:Terminated";
    LifecycleState["WARMED_TERMINATING"] = "Warmed:Terminating";
    LifecycleState["WARMED_TERMINATING_PROCEED"] = "Warmed:Terminating:Proceed";
    LifecycleState["WARMED_TERMINATING_WAIT"] = "Warmed:Terminating:Wait";
})(LifecycleState = exports.LifecycleState || (exports.LifecycleState = {}));
var WarmPoolState;
(function (WarmPoolState) {
    WarmPoolState["Hibernated"] = "Hibernated";
    WarmPoolState["Running"] = "Running";
    WarmPoolState["Stopped"] = "Stopped";
})(WarmPoolState = exports.WarmPoolState || (exports.WarmPoolState = {}));
var WarmPoolStatus;
(function (WarmPoolStatus) {
    WarmPoolStatus["PendingDelete"] = "PendingDelete";
})(WarmPoolStatus = exports.WarmPoolStatus || (exports.WarmPoolStatus = {}));
class InvalidNextToken extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "InvalidNextToken",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidNextToken";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidNextToken.prototype);
    }
}
exports.InvalidNextToken = InvalidNextToken;
var InstanceRefreshStatus;
(function (InstanceRefreshStatus) {
    InstanceRefreshStatus["Cancelled"] = "Cancelled";
    InstanceRefreshStatus["Cancelling"] = "Cancelling";
    InstanceRefreshStatus["Failed"] = "Failed";
    InstanceRefreshStatus["InProgress"] = "InProgress";
    InstanceRefreshStatus["Pending"] = "Pending";
    InstanceRefreshStatus["Successful"] = "Successful";
})(InstanceRefreshStatus = exports.InstanceRefreshStatus || (exports.InstanceRefreshStatus = {}));
var PredictiveScalingMaxCapacityBreachBehavior;
(function (PredictiveScalingMaxCapacityBreachBehavior) {
    PredictiveScalingMaxCapacityBreachBehavior["HonorMaxCapacity"] = "HonorMaxCapacity";
    PredictiveScalingMaxCapacityBreachBehavior["IncreaseMaxCapacity"] = "IncreaseMaxCapacity";
})(PredictiveScalingMaxCapacityBreachBehavior = exports.PredictiveScalingMaxCapacityBreachBehavior || (exports.PredictiveScalingMaxCapacityBreachBehavior = {}));
var PredefinedLoadMetricType;
(function (PredefinedLoadMetricType) {
    PredefinedLoadMetricType["ALBTargetGroupRequestCount"] = "ALBTargetGroupRequestCount";
    PredefinedLoadMetricType["ASGTotalCPUUtilization"] = "ASGTotalCPUUtilization";
    PredefinedLoadMetricType["ASGTotalNetworkIn"] = "ASGTotalNetworkIn";
    PredefinedLoadMetricType["ASGTotalNetworkOut"] = "ASGTotalNetworkOut";
})(PredefinedLoadMetricType = exports.PredefinedLoadMetricType || (exports.PredefinedLoadMetricType = {}));
var PredefinedMetricPairType;
(function (PredefinedMetricPairType) {
    PredefinedMetricPairType["ALBRequestCount"] = "ALBRequestCount";
    PredefinedMetricPairType["ASGCPUUtilization"] = "ASGCPUUtilization";
    PredefinedMetricPairType["ASGNetworkIn"] = "ASGNetworkIn";
    PredefinedMetricPairType["ASGNetworkOut"] = "ASGNetworkOut";
})(PredefinedMetricPairType = exports.PredefinedMetricPairType || (exports.PredefinedMetricPairType = {}));
var PredefinedScalingMetricType;
(function (PredefinedScalingMetricType) {
    PredefinedScalingMetricType["ALBRequestCountPerTarget"] = "ALBRequestCountPerTarget";
    PredefinedScalingMetricType["ASGAverageCPUUtilization"] = "ASGAverageCPUUtilization";
    PredefinedScalingMetricType["ASGAverageNetworkIn"] = "ASGAverageNetworkIn";
    PredefinedScalingMetricType["ASGAverageNetworkOut"] = "ASGAverageNetworkOut";
})(PredefinedScalingMetricType = exports.PredefinedScalingMetricType || (exports.PredefinedScalingMetricType = {}));
var PredictiveScalingMode;
(function (PredictiveScalingMode) {
    PredictiveScalingMode["ForecastAndScale"] = "ForecastAndScale";
    PredictiveScalingMode["ForecastOnly"] = "ForecastOnly";
})(PredictiveScalingMode = exports.PredictiveScalingMode || (exports.PredictiveScalingMode = {}));
var MetricStatistic;
(function (MetricStatistic) {
    MetricStatistic["Average"] = "Average";
    MetricStatistic["Maximum"] = "Maximum";
    MetricStatistic["Minimum"] = "Minimum";
    MetricStatistic["SampleCount"] = "SampleCount";
    MetricStatistic["Sum"] = "Sum";
})(MetricStatistic = exports.MetricStatistic || (exports.MetricStatistic = {}));
var MetricType;
(function (MetricType) {
    MetricType["ALBRequestCountPerTarget"] = "ALBRequestCountPerTarget";
    MetricType["ASGAverageCPUUtilization"] = "ASGAverageCPUUtilization";
    MetricType["ASGAverageNetworkIn"] = "ASGAverageNetworkIn";
    MetricType["ASGAverageNetworkOut"] = "ASGAverageNetworkOut";
})(MetricType = exports.MetricType || (exports.MetricType = {}));
class InstanceRefreshInProgressFault extends AutoScalingServiceException_1.AutoScalingServiceException {
    constructor(opts) {
        super({
            name: "InstanceRefreshInProgressFault",
            $fault: "client",
            ...opts,
        });
        this.name = "InstanceRefreshInProgressFault";
        this.$fault = "client";
        Object.setPrototypeOf(this, InstanceRefreshInProgressFault.prototype);
    }
}
exports.InstanceRefreshInProgressFault = InstanceRefreshInProgressFault;
var RefreshStrategy;
(function (RefreshStrategy) {
    RefreshStrategy["Rolling"] = "Rolling";
})(RefreshStrategy = exports.RefreshStrategy || (exports.RefreshStrategy = {}));
const AcceleratorCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceleratorCountRequestFilterSensitiveLog = AcceleratorCountRequestFilterSensitiveLog;
const AcceleratorTotalMemoryMiBRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AcceleratorTotalMemoryMiBRequestFilterSensitiveLog = AcceleratorTotalMemoryMiBRequestFilterSensitiveLog;
const ActivityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActivityFilterSensitiveLog = ActivityFilterSensitiveLog;
const ActivitiesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActivitiesTypeFilterSensitiveLog = ActivitiesTypeFilterSensitiveLog;
const ActivityTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ActivityTypeFilterSensitiveLog = ActivityTypeFilterSensitiveLog;
const AdjustmentTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AdjustmentTypeFilterSensitiveLog = AdjustmentTypeFilterSensitiveLog;
const AlarmFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AlarmFilterSensitiveLog = AlarmFilterSensitiveLog;
const AttachInstancesQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachInstancesQueryFilterSensitiveLog = AttachInstancesQueryFilterSensitiveLog;
const AttachLoadBalancersResultTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachLoadBalancersResultTypeFilterSensitiveLog = AttachLoadBalancersResultTypeFilterSensitiveLog;
const AttachLoadBalancersTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachLoadBalancersTypeFilterSensitiveLog = AttachLoadBalancersTypeFilterSensitiveLog;
const AttachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog = AttachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog;
const AttachLoadBalancerTargetGroupsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttachLoadBalancerTargetGroupsTypeFilterSensitiveLog = AttachLoadBalancerTargetGroupsTypeFilterSensitiveLog;
const FailedScheduledUpdateGroupActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailedScheduledUpdateGroupActionRequestFilterSensitiveLog = FailedScheduledUpdateGroupActionRequestFilterSensitiveLog;
const BatchDeleteScheduledActionAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchDeleteScheduledActionAnswerFilterSensitiveLog = BatchDeleteScheduledActionAnswerFilterSensitiveLog;
const BatchDeleteScheduledActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchDeleteScheduledActionTypeFilterSensitiveLog = BatchDeleteScheduledActionTypeFilterSensitiveLog;
const BatchPutScheduledUpdateGroupActionAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchPutScheduledUpdateGroupActionAnswerFilterSensitiveLog = BatchPutScheduledUpdateGroupActionAnswerFilterSensitiveLog;
const ScheduledUpdateGroupActionRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScheduledUpdateGroupActionRequestFilterSensitiveLog = ScheduledUpdateGroupActionRequestFilterSensitiveLog;
const BatchPutScheduledUpdateGroupActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchPutScheduledUpdateGroupActionTypeFilterSensitiveLog = BatchPutScheduledUpdateGroupActionTypeFilterSensitiveLog;
const CancelInstanceRefreshAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelInstanceRefreshAnswerFilterSensitiveLog = CancelInstanceRefreshAnswerFilterSensitiveLog;
const CancelInstanceRefreshTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CancelInstanceRefreshTypeFilterSensitiveLog = CancelInstanceRefreshTypeFilterSensitiveLog;
const CompleteLifecycleActionAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CompleteLifecycleActionAnswerFilterSensitiveLog = CompleteLifecycleActionAnswerFilterSensitiveLog;
const CompleteLifecycleActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CompleteLifecycleActionTypeFilterSensitiveLog = CompleteLifecycleActionTypeFilterSensitiveLog;
const LaunchTemplateSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchTemplateSpecificationFilterSensitiveLog = LaunchTemplateSpecificationFilterSensitiveLog;
const LifecycleHookSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LifecycleHookSpecificationFilterSensitiveLog = LifecycleHookSpecificationFilterSensitiveLog;
const InstancesDistributionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstancesDistributionFilterSensitiveLog = InstancesDistributionFilterSensitiveLog;
const BaselineEbsBandwidthMbpsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BaselineEbsBandwidthMbpsRequestFilterSensitiveLog = BaselineEbsBandwidthMbpsRequestFilterSensitiveLog;
const MemoryGiBPerVCpuRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MemoryGiBPerVCpuRequestFilterSensitiveLog = MemoryGiBPerVCpuRequestFilterSensitiveLog;
const MemoryMiBRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MemoryMiBRequestFilterSensitiveLog = MemoryMiBRequestFilterSensitiveLog;
const NetworkBandwidthGbpsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NetworkBandwidthGbpsRequestFilterSensitiveLog = NetworkBandwidthGbpsRequestFilterSensitiveLog;
const NetworkInterfaceCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NetworkInterfaceCountRequestFilterSensitiveLog = NetworkInterfaceCountRequestFilterSensitiveLog;
const TotalLocalStorageGBRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TotalLocalStorageGBRequestFilterSensitiveLog = TotalLocalStorageGBRequestFilterSensitiveLog;
const VCpuCountRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.VCpuCountRequestFilterSensitiveLog = VCpuCountRequestFilterSensitiveLog;
const InstanceRequirementsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceRequirementsFilterSensitiveLog = InstanceRequirementsFilterSensitiveLog;
const LaunchTemplateOverridesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchTemplateOverridesFilterSensitiveLog = LaunchTemplateOverridesFilterSensitiveLog;
const LaunchTemplateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchTemplateFilterSensitiveLog = LaunchTemplateFilterSensitiveLog;
const MixedInstancesPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MixedInstancesPolicyFilterSensitiveLog = MixedInstancesPolicyFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const CreateAutoScalingGroupTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateAutoScalingGroupTypeFilterSensitiveLog = CreateAutoScalingGroupTypeFilterSensitiveLog;
const EbsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EbsFilterSensitiveLog = EbsFilterSensitiveLog;
const BlockDeviceMappingFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BlockDeviceMappingFilterSensitiveLog = BlockDeviceMappingFilterSensitiveLog;
const InstanceMonitoringFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceMonitoringFilterSensitiveLog = InstanceMonitoringFilterSensitiveLog;
const InstanceMetadataOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceMetadataOptionsFilterSensitiveLog = InstanceMetadataOptionsFilterSensitiveLog;
const CreateLaunchConfigurationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateLaunchConfigurationTypeFilterSensitiveLog = CreateLaunchConfigurationTypeFilterSensitiveLog;
const CreateOrUpdateTagsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateOrUpdateTagsTypeFilterSensitiveLog = CreateOrUpdateTagsTypeFilterSensitiveLog;
const DeleteAutoScalingGroupTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteAutoScalingGroupTypeFilterSensitiveLog = DeleteAutoScalingGroupTypeFilterSensitiveLog;
const LaunchConfigurationNameTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchConfigurationNameTypeFilterSensitiveLog = LaunchConfigurationNameTypeFilterSensitiveLog;
const DeleteLifecycleHookAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLifecycleHookAnswerFilterSensitiveLog = DeleteLifecycleHookAnswerFilterSensitiveLog;
const DeleteLifecycleHookTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteLifecycleHookTypeFilterSensitiveLog = DeleteLifecycleHookTypeFilterSensitiveLog;
const DeleteNotificationConfigurationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteNotificationConfigurationTypeFilterSensitiveLog = DeleteNotificationConfigurationTypeFilterSensitiveLog;
const DeletePolicyTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeletePolicyTypeFilterSensitiveLog = DeletePolicyTypeFilterSensitiveLog;
const DeleteScheduledActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteScheduledActionTypeFilterSensitiveLog = DeleteScheduledActionTypeFilterSensitiveLog;
const DeleteTagsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTagsTypeFilterSensitiveLog = DeleteTagsTypeFilterSensitiveLog;
const DeleteWarmPoolAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteWarmPoolAnswerFilterSensitiveLog = DeleteWarmPoolAnswerFilterSensitiveLog;
const DeleteWarmPoolTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteWarmPoolTypeFilterSensitiveLog = DeleteWarmPoolTypeFilterSensitiveLog;
const DescribeAccountLimitsAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAccountLimitsAnswerFilterSensitiveLog = DescribeAccountLimitsAnswerFilterSensitiveLog;
const DescribeAdjustmentTypesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAdjustmentTypesAnswerFilterSensitiveLog = DescribeAdjustmentTypesAnswerFilterSensitiveLog;
const FilterFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FilterFilterSensitiveLog = FilterFilterSensitiveLog;
const AutoScalingGroupNamesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingGroupNamesTypeFilterSensitiveLog = AutoScalingGroupNamesTypeFilterSensitiveLog;
const EnabledMetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnabledMetricFilterSensitiveLog = EnabledMetricFilterSensitiveLog;
const InstanceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceFilterSensitiveLog = InstanceFilterSensitiveLog;
const SuspendedProcessFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SuspendedProcessFilterSensitiveLog = SuspendedProcessFilterSensitiveLog;
const TagDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagDescriptionFilterSensitiveLog = TagDescriptionFilterSensitiveLog;
const InstanceReusePolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceReusePolicyFilterSensitiveLog = InstanceReusePolicyFilterSensitiveLog;
const WarmPoolConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.WarmPoolConfigurationFilterSensitiveLog = WarmPoolConfigurationFilterSensitiveLog;
const AutoScalingGroupFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingGroupFilterSensitiveLog = AutoScalingGroupFilterSensitiveLog;
const AutoScalingGroupsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingGroupsTypeFilterSensitiveLog = AutoScalingGroupsTypeFilterSensitiveLog;
const AutoScalingInstanceDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingInstanceDetailsFilterSensitiveLog = AutoScalingInstanceDetailsFilterSensitiveLog;
const AutoScalingInstancesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingInstancesTypeFilterSensitiveLog = AutoScalingInstancesTypeFilterSensitiveLog;
const DescribeAutoScalingInstancesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAutoScalingInstancesTypeFilterSensitiveLog = DescribeAutoScalingInstancesTypeFilterSensitiveLog;
const DescribeAutoScalingNotificationTypesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeAutoScalingNotificationTypesAnswerFilterSensitiveLog = DescribeAutoScalingNotificationTypesAnswerFilterSensitiveLog;
const DesiredConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DesiredConfigurationFilterSensitiveLog = DesiredConfigurationFilterSensitiveLog;
const RefreshPreferencesFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RefreshPreferencesFilterSensitiveLog = RefreshPreferencesFilterSensitiveLog;
const InstanceRefreshLivePoolProgressFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceRefreshLivePoolProgressFilterSensitiveLog = InstanceRefreshLivePoolProgressFilterSensitiveLog;
const InstanceRefreshWarmPoolProgressFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceRefreshWarmPoolProgressFilterSensitiveLog = InstanceRefreshWarmPoolProgressFilterSensitiveLog;
const InstanceRefreshProgressDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceRefreshProgressDetailsFilterSensitiveLog = InstanceRefreshProgressDetailsFilterSensitiveLog;
const InstanceRefreshFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InstanceRefreshFilterSensitiveLog = InstanceRefreshFilterSensitiveLog;
const DescribeInstanceRefreshesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeInstanceRefreshesAnswerFilterSensitiveLog = DescribeInstanceRefreshesAnswerFilterSensitiveLog;
const DescribeInstanceRefreshesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeInstanceRefreshesTypeFilterSensitiveLog = DescribeInstanceRefreshesTypeFilterSensitiveLog;
const LaunchConfigurationNamesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchConfigurationNamesTypeFilterSensitiveLog = LaunchConfigurationNamesTypeFilterSensitiveLog;
const LaunchConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchConfigurationFilterSensitiveLog = LaunchConfigurationFilterSensitiveLog;
const LaunchConfigurationsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LaunchConfigurationsTypeFilterSensitiveLog = LaunchConfigurationsTypeFilterSensitiveLog;
const LifecycleHookFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LifecycleHookFilterSensitiveLog = LifecycleHookFilterSensitiveLog;
const DescribeLifecycleHooksAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLifecycleHooksAnswerFilterSensitiveLog = DescribeLifecycleHooksAnswerFilterSensitiveLog;
const DescribeLifecycleHooksTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLifecycleHooksTypeFilterSensitiveLog = DescribeLifecycleHooksTypeFilterSensitiveLog;
const DescribeLifecycleHookTypesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLifecycleHookTypesAnswerFilterSensitiveLog = DescribeLifecycleHookTypesAnswerFilterSensitiveLog;
const DescribeLoadBalancersRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLoadBalancersRequestFilterSensitiveLog = DescribeLoadBalancersRequestFilterSensitiveLog;
const LoadBalancerStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LoadBalancerStateFilterSensitiveLog = LoadBalancerStateFilterSensitiveLog;
const DescribeLoadBalancersResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLoadBalancersResponseFilterSensitiveLog = DescribeLoadBalancersResponseFilterSensitiveLog;
const DescribeLoadBalancerTargetGroupsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLoadBalancerTargetGroupsRequestFilterSensitiveLog = DescribeLoadBalancerTargetGroupsRequestFilterSensitiveLog;
const LoadBalancerTargetGroupStateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LoadBalancerTargetGroupStateFilterSensitiveLog = LoadBalancerTargetGroupStateFilterSensitiveLog;
const DescribeLoadBalancerTargetGroupsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLoadBalancerTargetGroupsResponseFilterSensitiveLog = DescribeLoadBalancerTargetGroupsResponseFilterSensitiveLog;
const MetricGranularityTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricGranularityTypeFilterSensitiveLog = MetricGranularityTypeFilterSensitiveLog;
const MetricCollectionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricCollectionTypeFilterSensitiveLog = MetricCollectionTypeFilterSensitiveLog;
const DescribeMetricCollectionTypesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeMetricCollectionTypesAnswerFilterSensitiveLog = DescribeMetricCollectionTypesAnswerFilterSensitiveLog;
const NotificationConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.NotificationConfigurationFilterSensitiveLog = NotificationConfigurationFilterSensitiveLog;
const DescribeNotificationConfigurationsAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeNotificationConfigurationsAnswerFilterSensitiveLog = DescribeNotificationConfigurationsAnswerFilterSensitiveLog;
const DescribeNotificationConfigurationsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeNotificationConfigurationsTypeFilterSensitiveLog = DescribeNotificationConfigurationsTypeFilterSensitiveLog;
const DescribePoliciesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribePoliciesTypeFilterSensitiveLog = DescribePoliciesTypeFilterSensitiveLog;
const MetricDimensionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricDimensionFilterSensitiveLog = MetricDimensionFilterSensitiveLog;
const MetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricFilterSensitiveLog = MetricFilterSensitiveLog;
const MetricStatFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricStatFilterSensitiveLog = MetricStatFilterSensitiveLog;
const MetricDataQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.MetricDataQueryFilterSensitiveLog = MetricDataQueryFilterSensitiveLog;
const PredictiveScalingCustomizedCapacityMetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingCustomizedCapacityMetricFilterSensitiveLog = PredictiveScalingCustomizedCapacityMetricFilterSensitiveLog;
const PredictiveScalingCustomizedLoadMetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingCustomizedLoadMetricFilterSensitiveLog = PredictiveScalingCustomizedLoadMetricFilterSensitiveLog;
const PredictiveScalingCustomizedScalingMetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingCustomizedScalingMetricFilterSensitiveLog = PredictiveScalingCustomizedScalingMetricFilterSensitiveLog;
const PredictiveScalingPredefinedLoadMetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingPredefinedLoadMetricFilterSensitiveLog = PredictiveScalingPredefinedLoadMetricFilterSensitiveLog;
const PredictiveScalingPredefinedMetricPairFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingPredefinedMetricPairFilterSensitiveLog = PredictiveScalingPredefinedMetricPairFilterSensitiveLog;
const PredictiveScalingPredefinedScalingMetricFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingPredefinedScalingMetricFilterSensitiveLog = PredictiveScalingPredefinedScalingMetricFilterSensitiveLog;
const PredictiveScalingMetricSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingMetricSpecificationFilterSensitiveLog = PredictiveScalingMetricSpecificationFilterSensitiveLog;
const PredictiveScalingConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredictiveScalingConfigurationFilterSensitiveLog = PredictiveScalingConfigurationFilterSensitiveLog;
const StepAdjustmentFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StepAdjustmentFilterSensitiveLog = StepAdjustmentFilterSensitiveLog;
const CustomizedMetricSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CustomizedMetricSpecificationFilterSensitiveLog = CustomizedMetricSpecificationFilterSensitiveLog;
const PredefinedMetricSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PredefinedMetricSpecificationFilterSensitiveLog = PredefinedMetricSpecificationFilterSensitiveLog;
const TargetTrackingConfigurationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TargetTrackingConfigurationFilterSensitiveLog = TargetTrackingConfigurationFilterSensitiveLog;
const ScalingPolicyFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScalingPolicyFilterSensitiveLog = ScalingPolicyFilterSensitiveLog;
const PoliciesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PoliciesTypeFilterSensitiveLog = PoliciesTypeFilterSensitiveLog;
const DescribeScalingActivitiesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeScalingActivitiesTypeFilterSensitiveLog = DescribeScalingActivitiesTypeFilterSensitiveLog;
const ProcessTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProcessTypeFilterSensitiveLog = ProcessTypeFilterSensitiveLog;
const ProcessesTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProcessesTypeFilterSensitiveLog = ProcessesTypeFilterSensitiveLog;
const DescribeScheduledActionsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeScheduledActionsTypeFilterSensitiveLog = DescribeScheduledActionsTypeFilterSensitiveLog;
const ScheduledUpdateGroupActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScheduledUpdateGroupActionFilterSensitiveLog = ScheduledUpdateGroupActionFilterSensitiveLog;
const ScheduledActionsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScheduledActionsTypeFilterSensitiveLog = ScheduledActionsTypeFilterSensitiveLog;
const DescribeTagsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTagsTypeFilterSensitiveLog = DescribeTagsTypeFilterSensitiveLog;
const TagsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagsTypeFilterSensitiveLog = TagsTypeFilterSensitiveLog;
const DescribeTerminationPolicyTypesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTerminationPolicyTypesAnswerFilterSensitiveLog = DescribeTerminationPolicyTypesAnswerFilterSensitiveLog;
const DescribeWarmPoolAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeWarmPoolAnswerFilterSensitiveLog = DescribeWarmPoolAnswerFilterSensitiveLog;
const DescribeWarmPoolTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeWarmPoolTypeFilterSensitiveLog = DescribeWarmPoolTypeFilterSensitiveLog;
const DetachInstancesAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachInstancesAnswerFilterSensitiveLog = DetachInstancesAnswerFilterSensitiveLog;
const DetachInstancesQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachInstancesQueryFilterSensitiveLog = DetachInstancesQueryFilterSensitiveLog;
const DetachLoadBalancersResultTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachLoadBalancersResultTypeFilterSensitiveLog = DetachLoadBalancersResultTypeFilterSensitiveLog;
const DetachLoadBalancersTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachLoadBalancersTypeFilterSensitiveLog = DetachLoadBalancersTypeFilterSensitiveLog;
const DetachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog = DetachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog;
const DetachLoadBalancerTargetGroupsTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DetachLoadBalancerTargetGroupsTypeFilterSensitiveLog = DetachLoadBalancerTargetGroupsTypeFilterSensitiveLog;
const DisableMetricsCollectionQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DisableMetricsCollectionQueryFilterSensitiveLog = DisableMetricsCollectionQueryFilterSensitiveLog;
const EnableMetricsCollectionQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnableMetricsCollectionQueryFilterSensitiveLog = EnableMetricsCollectionQueryFilterSensitiveLog;
const EnterStandbyAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnterStandbyAnswerFilterSensitiveLog = EnterStandbyAnswerFilterSensitiveLog;
const EnterStandbyQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EnterStandbyQueryFilterSensitiveLog = EnterStandbyQueryFilterSensitiveLog;
const ExecutePolicyTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExecutePolicyTypeFilterSensitiveLog = ExecutePolicyTypeFilterSensitiveLog;
const ExitStandbyAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExitStandbyAnswerFilterSensitiveLog = ExitStandbyAnswerFilterSensitiveLog;
const ExitStandbyQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExitStandbyQueryFilterSensitiveLog = ExitStandbyQueryFilterSensitiveLog;
const CapacityForecastFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CapacityForecastFilterSensitiveLog = CapacityForecastFilterSensitiveLog;
const LoadForecastFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LoadForecastFilterSensitiveLog = LoadForecastFilterSensitiveLog;
const GetPredictiveScalingForecastAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPredictiveScalingForecastAnswerFilterSensitiveLog = GetPredictiveScalingForecastAnswerFilterSensitiveLog;
const GetPredictiveScalingForecastTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GetPredictiveScalingForecastTypeFilterSensitiveLog = GetPredictiveScalingForecastTypeFilterSensitiveLog;
const PutLifecycleHookAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutLifecycleHookAnswerFilterSensitiveLog = PutLifecycleHookAnswerFilterSensitiveLog;
const PutLifecycleHookTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutLifecycleHookTypeFilterSensitiveLog = PutLifecycleHookTypeFilterSensitiveLog;
const PutNotificationConfigurationTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutNotificationConfigurationTypeFilterSensitiveLog = PutNotificationConfigurationTypeFilterSensitiveLog;
const PolicyARNTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PolicyARNTypeFilterSensitiveLog = PolicyARNTypeFilterSensitiveLog;
const PutScalingPolicyTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutScalingPolicyTypeFilterSensitiveLog = PutScalingPolicyTypeFilterSensitiveLog;
const PutScheduledUpdateGroupActionTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutScheduledUpdateGroupActionTypeFilterSensitiveLog = PutScheduledUpdateGroupActionTypeFilterSensitiveLog;
const PutWarmPoolAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutWarmPoolAnswerFilterSensitiveLog = PutWarmPoolAnswerFilterSensitiveLog;
const PutWarmPoolTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PutWarmPoolTypeFilterSensitiveLog = PutWarmPoolTypeFilterSensitiveLog;
const RecordLifecycleActionHeartbeatAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RecordLifecycleActionHeartbeatAnswerFilterSensitiveLog = RecordLifecycleActionHeartbeatAnswerFilterSensitiveLog;
const RecordLifecycleActionHeartbeatTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RecordLifecycleActionHeartbeatTypeFilterSensitiveLog = RecordLifecycleActionHeartbeatTypeFilterSensitiveLog;
const ScalingProcessQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ScalingProcessQueryFilterSensitiveLog = ScalingProcessQueryFilterSensitiveLog;
const SetDesiredCapacityTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetDesiredCapacityTypeFilterSensitiveLog = SetDesiredCapacityTypeFilterSensitiveLog;
const SetInstanceHealthQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetInstanceHealthQueryFilterSensitiveLog = SetInstanceHealthQueryFilterSensitiveLog;
const SetInstanceProtectionAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetInstanceProtectionAnswerFilterSensitiveLog = SetInstanceProtectionAnswerFilterSensitiveLog;
const SetInstanceProtectionQueryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SetInstanceProtectionQueryFilterSensitiveLog = SetInstanceProtectionQueryFilterSensitiveLog;
const StartInstanceRefreshAnswerFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartInstanceRefreshAnswerFilterSensitiveLog = StartInstanceRefreshAnswerFilterSensitiveLog;
const StartInstanceRefreshTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StartInstanceRefreshTypeFilterSensitiveLog = StartInstanceRefreshTypeFilterSensitiveLog;
const TerminateInstanceInAutoScalingGroupTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TerminateInstanceInAutoScalingGroupTypeFilterSensitiveLog = TerminateInstanceInAutoScalingGroupTypeFilterSensitiveLog;
const UpdateAutoScalingGroupTypeFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateAutoScalingGroupTypeFilterSensitiveLog = UpdateAutoScalingGroupTypeFilterSensitiveLog;
