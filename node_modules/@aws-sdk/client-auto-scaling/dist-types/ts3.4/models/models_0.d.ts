import { ExceptionOptionType as __ExceptionOptionType } from "@aws-sdk/smithy-client";
import { AutoScalingServiceException as __BaseException } from "./AutoScalingServiceException";
export interface AcceleratorCountRequest {
  Min?: number;
  Max?: number;
}
export declare enum AcceleratorManufacturer {
  AMAZON_WEB_SERVICES = "amazon-web-services",
  AMD = "amd",
  NVIDIA = "nvidia",
  XILINX = "xilinx",
}
export declare enum AcceleratorName {
  A100 = "a100",
  K80 = "k80",
  M60 = "m60",
  RADEON_PRO_V520 = "radeon-pro-v520",
  T4 = "t4",
  V100 = "v100",
  VU9P = "vu9p",
}
export interface AcceleratorTotalMemoryMiBRequest {
  Min?: number;
  Max?: number;
}
export declare enum AcceleratorType {
  FPGA = "fpga",
  GPU = "gpu",
  INFERENCE = "inference",
}
export declare class ActiveInstanceRefreshNotFoundFault extends __BaseException {
  readonly name: "ActiveInstanceRefreshNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ActiveInstanceRefreshNotFoundFault,
      __BaseException
    >
  );
}
export declare enum ScalingActivityStatusCode {
  Cancelled = "Cancelled",
  Failed = "Failed",
  InProgress = "InProgress",
  MidLifecycleAction = "MidLifecycleAction",
  PendingSpotBidPlacement = "PendingSpotBidPlacement",
  PreInService = "PreInService",
  Successful = "Successful",
  WaitingForELBConnectionDraining = "WaitingForELBConnectionDraining",
  WaitingForInstanceId = "WaitingForInstanceId",
  WaitingForInstanceWarmup = "WaitingForInstanceWarmup",
  WaitingForSpotInstanceId = "WaitingForSpotInstanceId",
  WaitingForSpotInstanceRequestId = "WaitingForSpotInstanceRequestId",
}
export interface Activity {
  ActivityId: string | undefined;
  AutoScalingGroupName: string | undefined;
  Description?: string;
  Cause: string | undefined;
  StartTime: Date | undefined;
  EndTime?: Date;
  StatusCode: ScalingActivityStatusCode | string | undefined;
  StatusMessage?: string;
  Progress?: number;
  Details?: string;
  AutoScalingGroupState?: string;
  AutoScalingGroupARN?: string;
}
export interface ActivitiesType {
  Activities: Activity[] | undefined;
  NextToken?: string;
}
export interface ActivityType {
  Activity?: Activity;
}
export interface AdjustmentType {
  AdjustmentType?: string;
}
export interface Alarm {
  AlarmName?: string;
  AlarmARN?: string;
}
export declare class AlreadyExistsFault extends __BaseException {
  readonly name: "AlreadyExistsFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<AlreadyExistsFault, __BaseException>);
}
export interface AttachInstancesQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
}
export declare class ResourceContentionFault extends __BaseException {
  readonly name: "ResourceContentionFault";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ResourceContentionFault, __BaseException>
  );
}
export declare class ServiceLinkedRoleFailure extends __BaseException {
  readonly name: "ServiceLinkedRoleFailure";
  readonly $fault: "server";
  constructor(
    opts: __ExceptionOptionType<ServiceLinkedRoleFailure, __BaseException>
  );
}
export interface AttachLoadBalancersResultType {}
export interface AttachLoadBalancersType {
  AutoScalingGroupName: string | undefined;
  LoadBalancerNames: string[] | undefined;
}
export interface AttachLoadBalancerTargetGroupsResultType {}
export interface AttachLoadBalancerTargetGroupsType {
  AutoScalingGroupName: string | undefined;
  TargetGroupARNs: string[] | undefined;
}
export interface FailedScheduledUpdateGroupActionRequest {
  ScheduledActionName: string | undefined;
  ErrorCode?: string;
  ErrorMessage?: string;
}
export interface BatchDeleteScheduledActionAnswer {
  FailedScheduledActions?: FailedScheduledUpdateGroupActionRequest[];
}
export interface BatchDeleteScheduledActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionNames: string[] | undefined;
}
export interface BatchPutScheduledUpdateGroupActionAnswer {
  FailedScheduledUpdateGroupActions?: FailedScheduledUpdateGroupActionRequest[];
}
export interface ScheduledUpdateGroupActionRequest {
  ScheduledActionName: string | undefined;
  StartTime?: Date;
  EndTime?: Date;
  Recurrence?: string;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  TimeZone?: string;
}
export interface BatchPutScheduledUpdateGroupActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledUpdateGroupActions: ScheduledUpdateGroupActionRequest[] | undefined;
}
export declare class LimitExceededFault extends __BaseException {
  readonly name: "LimitExceededFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<LimitExceededFault, __BaseException>);
}
export interface CancelInstanceRefreshAnswer {
  InstanceRefreshId?: string;
}
export interface CancelInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
}
export interface CompleteLifecycleActionAnswer {}
export interface CompleteLifecycleActionType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleActionToken?: string;
  LifecycleActionResult: string | undefined;
  InstanceId?: string;
}
export interface LaunchTemplateSpecification {
  LaunchTemplateId?: string;
  LaunchTemplateName?: string;
  Version?: string;
}
export interface LifecycleHookSpecification {
  LifecycleHookName: string | undefined;
  LifecycleTransition: string | undefined;
  NotificationMetadata?: string;
  HeartbeatTimeout?: number;
  DefaultResult?: string;
  NotificationTargetARN?: string;
  RoleARN?: string;
}
export interface InstancesDistribution {
  OnDemandAllocationStrategy?: string;
  OnDemandBaseCapacity?: number;
  OnDemandPercentageAboveBaseCapacity?: number;
  SpotAllocationStrategy?: string;
  SpotInstancePools?: number;
  SpotMaxPrice?: string;
}
export declare enum BareMetal {
  EXCLUDED = "excluded",
  INCLUDED = "included",
  REQUIRED = "required",
}
export interface BaselineEbsBandwidthMbpsRequest {
  Min?: number;
  Max?: number;
}
export declare enum BurstablePerformance {
  EXCLUDED = "excluded",
  INCLUDED = "included",
  REQUIRED = "required",
}
export declare enum CpuManufacturer {
  AMAZON_WEB_SERVICES = "amazon-web-services",
  AMD = "amd",
  INTEL = "intel",
}
export declare enum InstanceGeneration {
  CURRENT = "current",
  PREVIOUS = "previous",
}
export declare enum LocalStorage {
  EXCLUDED = "excluded",
  INCLUDED = "included",
  REQUIRED = "required",
}
export declare enum LocalStorageType {
  HDD = "hdd",
  SSD = "ssd",
}
export interface MemoryGiBPerVCpuRequest {
  Min?: number;
  Max?: number;
}
export interface MemoryMiBRequest {
  Min: number | undefined;
  Max?: number;
}
export interface NetworkBandwidthGbpsRequest {
  Min?: number;
  Max?: number;
}
export interface NetworkInterfaceCountRequest {
  Min?: number;
  Max?: number;
}
export interface TotalLocalStorageGBRequest {
  Min?: number;
  Max?: number;
}
export interface VCpuCountRequest {
  Min: number | undefined;
  Max?: number;
}
export interface InstanceRequirements {
  VCpuCount: VCpuCountRequest | undefined;
  MemoryMiB: MemoryMiBRequest | undefined;
  CpuManufacturers?: (CpuManufacturer | string)[];
  MemoryGiBPerVCpu?: MemoryGiBPerVCpuRequest;
  ExcludedInstanceTypes?: string[];
  InstanceGenerations?: (InstanceGeneration | string)[];
  SpotMaxPricePercentageOverLowestPrice?: number;
  OnDemandMaxPricePercentageOverLowestPrice?: number;
  BareMetal?: BareMetal | string;
  BurstablePerformance?: BurstablePerformance | string;
  RequireHibernateSupport?: boolean;
  NetworkInterfaceCount?: NetworkInterfaceCountRequest;
  LocalStorage?: LocalStorage | string;
  LocalStorageTypes?: (LocalStorageType | string)[];
  TotalLocalStorageGB?: TotalLocalStorageGBRequest;
  BaselineEbsBandwidthMbps?: BaselineEbsBandwidthMbpsRequest;
  AcceleratorTypes?: (AcceleratorType | string)[];
  AcceleratorCount?: AcceleratorCountRequest;
  AcceleratorManufacturers?: (AcceleratorManufacturer | string)[];
  AcceleratorNames?: (AcceleratorName | string)[];
  AcceleratorTotalMemoryMiB?: AcceleratorTotalMemoryMiBRequest;
  NetworkBandwidthGbps?: NetworkBandwidthGbpsRequest;
  AllowedInstanceTypes?: string[];
}
export interface LaunchTemplateOverrides {
  InstanceType?: string;
  WeightedCapacity?: string;
  LaunchTemplateSpecification?: LaunchTemplateSpecification;
  InstanceRequirements?: InstanceRequirements;
}
export interface LaunchTemplate {
  LaunchTemplateSpecification?: LaunchTemplateSpecification;
  Overrides?: LaunchTemplateOverrides[];
}
export interface MixedInstancesPolicy {
  LaunchTemplate?: LaunchTemplate;
  InstancesDistribution?: InstancesDistribution;
}
export interface Tag {
  ResourceId?: string;
  ResourceType?: string;
  Key: string | undefined;
  Value?: string;
  PropagateAtLaunch?: boolean;
}
export interface CreateAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
  InstanceId?: string;
  MinSize: number | undefined;
  MaxSize: number | undefined;
  DesiredCapacity?: number;
  DefaultCooldown?: number;
  AvailabilityZones?: string[];
  LoadBalancerNames?: string[];
  TargetGroupARNs?: string[];
  HealthCheckType?: string;
  HealthCheckGracePeriod?: number;
  PlacementGroup?: string;
  VPCZoneIdentifier?: string;
  TerminationPolicies?: string[];
  NewInstancesProtectedFromScaleIn?: boolean;
  CapacityRebalance?: boolean;
  LifecycleHookSpecificationList?: LifecycleHookSpecification[];
  Tags?: Tag[];
  ServiceLinkedRoleARN?: string;
  MaxInstanceLifetime?: number;
  Context?: string;
  DesiredCapacityType?: string;
  DefaultInstanceWarmup?: number;
}
export interface Ebs {
  SnapshotId?: string;
  VolumeSize?: number;
  VolumeType?: string;
  DeleteOnTermination?: boolean;
  Iops?: number;
  Encrypted?: boolean;
  Throughput?: number;
}
export interface BlockDeviceMapping {
  VirtualName?: string;
  DeviceName: string | undefined;
  Ebs?: Ebs;
  NoDevice?: boolean;
}
export interface InstanceMonitoring {
  Enabled?: boolean;
}
export declare enum InstanceMetadataEndpointState {
  Disabled = "disabled",
  Enabled = "enabled",
}
export declare enum InstanceMetadataHttpTokensState {
  Optional = "optional",
  Required = "required",
}
export interface InstanceMetadataOptions {
  HttpTokens?: InstanceMetadataHttpTokensState | string;
  HttpPutResponseHopLimit?: number;
  HttpEndpoint?: InstanceMetadataEndpointState | string;
}
export interface CreateLaunchConfigurationType {
  LaunchConfigurationName: string | undefined;
  ImageId?: string;
  KeyName?: string;
  SecurityGroups?: string[];
  ClassicLinkVPCId?: string;
  ClassicLinkVPCSecurityGroups?: string[];
  UserData?: string;
  InstanceId?: string;
  InstanceType?: string;
  KernelId?: string;
  RamdiskId?: string;
  BlockDeviceMappings?: BlockDeviceMapping[];
  InstanceMonitoring?: InstanceMonitoring;
  SpotPrice?: string;
  IamInstanceProfile?: string;
  EbsOptimized?: boolean;
  AssociatePublicIpAddress?: boolean;
  PlacementTenancy?: string;
  MetadataOptions?: InstanceMetadataOptions;
}
export interface CreateOrUpdateTagsType {
  Tags: Tag[] | undefined;
}
export declare class ResourceInUseFault extends __BaseException {
  readonly name: "ResourceInUseFault";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<ResourceInUseFault, __BaseException>);
}
export interface DeleteAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  ForceDelete?: boolean;
}
export declare class ScalingActivityInProgressFault extends __BaseException {
  readonly name: "ScalingActivityInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ScalingActivityInProgressFault, __BaseException>
  );
}
export interface LaunchConfigurationNameType {
  LaunchConfigurationName: string | undefined;
}
export interface DeleteLifecycleHookAnswer {}
export interface DeleteLifecycleHookType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
}
export interface DeleteNotificationConfigurationType {
  AutoScalingGroupName: string | undefined;
  TopicARN: string | undefined;
}
export interface DeletePolicyType {
  AutoScalingGroupName?: string;
  PolicyName: string | undefined;
}
export interface DeleteScheduledActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionName: string | undefined;
}
export interface DeleteTagsType {
  Tags: Tag[] | undefined;
}
export interface DeleteWarmPoolAnswer {}
export interface DeleteWarmPoolType {
  AutoScalingGroupName: string | undefined;
  ForceDelete?: boolean;
}
export interface DescribeAccountLimitsAnswer {
  MaxNumberOfAutoScalingGroups?: number;
  MaxNumberOfLaunchConfigurations?: number;
  NumberOfAutoScalingGroups?: number;
  NumberOfLaunchConfigurations?: number;
}
export interface DescribeAdjustmentTypesAnswer {
  AdjustmentTypes?: AdjustmentType[];
}
export interface Filter {
  Name?: string;
  Values?: string[];
}
export interface AutoScalingGroupNamesType {
  AutoScalingGroupNames?: string[];
  NextToken?: string;
  MaxRecords?: number;
  Filters?: Filter[];
}
export interface EnabledMetric {
  Metric?: string;
  Granularity?: string;
}
export declare enum LifecycleState {
  DETACHED = "Detached",
  DETACHING = "Detaching",
  ENTERING_STANDBY = "EnteringStandby",
  IN_SERVICE = "InService",
  PENDING = "Pending",
  PENDING_PROCEED = "Pending:Proceed",
  PENDING_WAIT = "Pending:Wait",
  QUARANTINED = "Quarantined",
  STANDBY = "Standby",
  TERMINATED = "Terminated",
  TERMINATING = "Terminating",
  TERMINATING_PROCEED = "Terminating:Proceed",
  TERMINATING_WAIT = "Terminating:Wait",
  WARMED_HIBERNATED = "Warmed:Hibernated",
  WARMED_PENDING = "Warmed:Pending",
  WARMED_PENDING_PROCEED = "Warmed:Pending:Proceed",
  WARMED_PENDING_WAIT = "Warmed:Pending:Wait",
  WARMED_RUNNING = "Warmed:Running",
  WARMED_STOPPED = "Warmed:Stopped",
  WARMED_TERMINATED = "Warmed:Terminated",
  WARMED_TERMINATING = "Warmed:Terminating",
  WARMED_TERMINATING_PROCEED = "Warmed:Terminating:Proceed",
  WARMED_TERMINATING_WAIT = "Warmed:Terminating:Wait",
}
export interface Instance {
  InstanceId: string | undefined;
  InstanceType?: string;
  AvailabilityZone: string | undefined;
  LifecycleState: LifecycleState | string | undefined;
  HealthStatus: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  ProtectedFromScaleIn: boolean | undefined;
  WeightedCapacity?: string;
}
export interface SuspendedProcess {
  ProcessName?: string;
  SuspensionReason?: string;
}
export interface TagDescription {
  ResourceId?: string;
  ResourceType?: string;
  Key?: string;
  Value?: string;
  PropagateAtLaunch?: boolean;
}
export interface InstanceReusePolicy {
  ReuseOnScaleIn?: boolean;
}
export declare enum WarmPoolState {
  Hibernated = "Hibernated",
  Running = "Running",
  Stopped = "Stopped",
}
export declare enum WarmPoolStatus {
  PendingDelete = "PendingDelete",
}
export interface WarmPoolConfiguration {
  MaxGroupPreparedCapacity?: number;
  MinSize?: number;
  PoolState?: WarmPoolState | string;
  Status?: WarmPoolStatus | string;
  InstanceReusePolicy?: InstanceReusePolicy;
}
export interface AutoScalingGroup {
  AutoScalingGroupName: string | undefined;
  AutoScalingGroupARN?: string;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
  MinSize: number | undefined;
  MaxSize: number | undefined;
  DesiredCapacity: number | undefined;
  PredictedCapacity?: number;
  DefaultCooldown: number | undefined;
  AvailabilityZones: string[] | undefined;
  LoadBalancerNames?: string[];
  TargetGroupARNs?: string[];
  HealthCheckType: string | undefined;
  HealthCheckGracePeriod?: number;
  Instances?: Instance[];
  CreatedTime: Date | undefined;
  SuspendedProcesses?: SuspendedProcess[];
  PlacementGroup?: string;
  VPCZoneIdentifier?: string;
  EnabledMetrics?: EnabledMetric[];
  Status?: string;
  Tags?: TagDescription[];
  TerminationPolicies?: string[];
  NewInstancesProtectedFromScaleIn?: boolean;
  ServiceLinkedRoleARN?: string;
  MaxInstanceLifetime?: number;
  CapacityRebalance?: boolean;
  WarmPoolConfiguration?: WarmPoolConfiguration;
  WarmPoolSize?: number;
  Context?: string;
  DesiredCapacityType?: string;
  DefaultInstanceWarmup?: number;
}
export interface AutoScalingGroupsType {
  AutoScalingGroups: AutoScalingGroup[] | undefined;
  NextToken?: string;
}
export declare class InvalidNextToken extends __BaseException {
  readonly name: "InvalidNextToken";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidNextToken, __BaseException>);
}
export interface AutoScalingInstanceDetails {
  InstanceId: string | undefined;
  InstanceType?: string;
  AutoScalingGroupName: string | undefined;
  AvailabilityZone: string | undefined;
  LifecycleState: string | undefined;
  HealthStatus: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  ProtectedFromScaleIn: boolean | undefined;
  WeightedCapacity?: string;
}
export interface AutoScalingInstancesType {
  AutoScalingInstances?: AutoScalingInstanceDetails[];
  NextToken?: string;
}
export interface DescribeAutoScalingInstancesType {
  InstanceIds?: string[];
  MaxRecords?: number;
  NextToken?: string;
}
export interface DescribeAutoScalingNotificationTypesAnswer {
  AutoScalingNotificationTypes?: string[];
}
export interface DesiredConfiguration {
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
}
export interface RefreshPreferences {
  MinHealthyPercentage?: number;
  InstanceWarmup?: number;
  CheckpointPercentages?: number[];
  CheckpointDelay?: number;
  SkipMatching?: boolean;
}
export interface InstanceRefreshLivePoolProgress {
  PercentageComplete?: number;
  InstancesToUpdate?: number;
}
export interface InstanceRefreshWarmPoolProgress {
  PercentageComplete?: number;
  InstancesToUpdate?: number;
}
export interface InstanceRefreshProgressDetails {
  LivePoolProgress?: InstanceRefreshLivePoolProgress;
  WarmPoolProgress?: InstanceRefreshWarmPoolProgress;
}
export declare enum InstanceRefreshStatus {
  Cancelled = "Cancelled",
  Cancelling = "Cancelling",
  Failed = "Failed",
  InProgress = "InProgress",
  Pending = "Pending",
  Successful = "Successful",
}
export interface InstanceRefresh {
  InstanceRefreshId?: string;
  AutoScalingGroupName?: string;
  Status?: InstanceRefreshStatus | string;
  StatusReason?: string;
  StartTime?: Date;
  EndTime?: Date;
  PercentageComplete?: number;
  InstancesToUpdate?: number;
  ProgressDetails?: InstanceRefreshProgressDetails;
  Preferences?: RefreshPreferences;
  DesiredConfiguration?: DesiredConfiguration;
}
export interface DescribeInstanceRefreshesAnswer {
  InstanceRefreshes?: InstanceRefresh[];
  NextToken?: string;
}
export interface DescribeInstanceRefreshesType {
  AutoScalingGroupName: string | undefined;
  InstanceRefreshIds?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface LaunchConfigurationNamesType {
  LaunchConfigurationNames?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface LaunchConfiguration {
  LaunchConfigurationName: string | undefined;
  LaunchConfigurationARN?: string;
  ImageId: string | undefined;
  KeyName?: string;
  SecurityGroups?: string[];
  ClassicLinkVPCId?: string;
  ClassicLinkVPCSecurityGroups?: string[];
  UserData?: string;
  InstanceType: string | undefined;
  KernelId?: string;
  RamdiskId?: string;
  BlockDeviceMappings?: BlockDeviceMapping[];
  InstanceMonitoring?: InstanceMonitoring;
  SpotPrice?: string;
  IamInstanceProfile?: string;
  CreatedTime: Date | undefined;
  EbsOptimized?: boolean;
  AssociatePublicIpAddress?: boolean;
  PlacementTenancy?: string;
  MetadataOptions?: InstanceMetadataOptions;
}
export interface LaunchConfigurationsType {
  LaunchConfigurations: LaunchConfiguration[] | undefined;
  NextToken?: string;
}
export interface LifecycleHook {
  LifecycleHookName?: string;
  AutoScalingGroupName?: string;
  LifecycleTransition?: string;
  NotificationTargetARN?: string;
  RoleARN?: string;
  NotificationMetadata?: string;
  HeartbeatTimeout?: number;
  GlobalTimeout?: number;
  DefaultResult?: string;
}
export interface DescribeLifecycleHooksAnswer {
  LifecycleHooks?: LifecycleHook[];
}
export interface DescribeLifecycleHooksType {
  AutoScalingGroupName: string | undefined;
  LifecycleHookNames?: string[];
}
export interface DescribeLifecycleHookTypesAnswer {
  LifecycleHookTypes?: string[];
}
export interface DescribeLoadBalancersRequest {
  AutoScalingGroupName: string | undefined;
  NextToken?: string;
  MaxRecords?: number;
}
export interface LoadBalancerState {
  LoadBalancerName?: string;
  State?: string;
}
export interface DescribeLoadBalancersResponse {
  LoadBalancers?: LoadBalancerState[];
  NextToken?: string;
}
export interface DescribeLoadBalancerTargetGroupsRequest {
  AutoScalingGroupName: string | undefined;
  NextToken?: string;
  MaxRecords?: number;
}
export interface LoadBalancerTargetGroupState {
  LoadBalancerTargetGroupARN?: string;
  State?: string;
}
export interface DescribeLoadBalancerTargetGroupsResponse {
  LoadBalancerTargetGroups?: LoadBalancerTargetGroupState[];
  NextToken?: string;
}
export interface MetricGranularityType {
  Granularity?: string;
}
export interface MetricCollectionType {
  Metric?: string;
}
export interface DescribeMetricCollectionTypesAnswer {
  Metrics?: MetricCollectionType[];
  Granularities?: MetricGranularityType[];
}
export interface NotificationConfiguration {
  AutoScalingGroupName?: string;
  TopicARN?: string;
  NotificationType?: string;
}
export interface DescribeNotificationConfigurationsAnswer {
  NotificationConfigurations: NotificationConfiguration[] | undefined;
  NextToken?: string;
}
export interface DescribeNotificationConfigurationsType {
  AutoScalingGroupNames?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface DescribePoliciesType {
  AutoScalingGroupName?: string;
  PolicyNames?: string[];
  PolicyTypes?: string[];
  NextToken?: string;
  MaxRecords?: number;
}
export declare enum PredictiveScalingMaxCapacityBreachBehavior {
  HonorMaxCapacity = "HonorMaxCapacity",
  IncreaseMaxCapacity = "IncreaseMaxCapacity",
}
export interface MetricDimension {
  Name: string | undefined;
  Value: string | undefined;
}
export interface Metric {
  Namespace: string | undefined;
  MetricName: string | undefined;
  Dimensions?: MetricDimension[];
}
export interface MetricStat {
  Metric: Metric | undefined;
  Stat: string | undefined;
  Unit?: string;
}
export interface MetricDataQuery {
  Id: string | undefined;
  Expression?: string;
  MetricStat?: MetricStat;
  Label?: string;
  ReturnData?: boolean;
}
export interface PredictiveScalingCustomizedCapacityMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export interface PredictiveScalingCustomizedLoadMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export interface PredictiveScalingCustomizedScalingMetric {
  MetricDataQueries: MetricDataQuery[] | undefined;
}
export declare enum PredefinedLoadMetricType {
  ALBTargetGroupRequestCount = "ALBTargetGroupRequestCount",
  ASGTotalCPUUtilization = "ASGTotalCPUUtilization",
  ASGTotalNetworkIn = "ASGTotalNetworkIn",
  ASGTotalNetworkOut = "ASGTotalNetworkOut",
}
export interface PredictiveScalingPredefinedLoadMetric {
  PredefinedMetricType: PredefinedLoadMetricType | string | undefined;
  ResourceLabel?: string;
}
export declare enum PredefinedMetricPairType {
  ALBRequestCount = "ALBRequestCount",
  ASGCPUUtilization = "ASGCPUUtilization",
  ASGNetworkIn = "ASGNetworkIn",
  ASGNetworkOut = "ASGNetworkOut",
}
export interface PredictiveScalingPredefinedMetricPair {
  PredefinedMetricType: PredefinedMetricPairType | string | undefined;
  ResourceLabel?: string;
}
export declare enum PredefinedScalingMetricType {
  ALBRequestCountPerTarget = "ALBRequestCountPerTarget",
  ASGAverageCPUUtilization = "ASGAverageCPUUtilization",
  ASGAverageNetworkIn = "ASGAverageNetworkIn",
  ASGAverageNetworkOut = "ASGAverageNetworkOut",
}
export interface PredictiveScalingPredefinedScalingMetric {
  PredefinedMetricType: PredefinedScalingMetricType | string | undefined;
  ResourceLabel?: string;
}
export interface PredictiveScalingMetricSpecification {
  TargetValue: number | undefined;
  PredefinedMetricPairSpecification?: PredictiveScalingPredefinedMetricPair;
  PredefinedScalingMetricSpecification?: PredictiveScalingPredefinedScalingMetric;
  PredefinedLoadMetricSpecification?: PredictiveScalingPredefinedLoadMetric;
  CustomizedScalingMetricSpecification?: PredictiveScalingCustomizedScalingMetric;
  CustomizedLoadMetricSpecification?: PredictiveScalingCustomizedLoadMetric;
  CustomizedCapacityMetricSpecification?: PredictiveScalingCustomizedCapacityMetric;
}
export declare enum PredictiveScalingMode {
  ForecastAndScale = "ForecastAndScale",
  ForecastOnly = "ForecastOnly",
}
export interface PredictiveScalingConfiguration {
  MetricSpecifications: PredictiveScalingMetricSpecification[] | undefined;
  Mode?: PredictiveScalingMode | string;
  SchedulingBufferTime?: number;
  MaxCapacityBreachBehavior?:
    | PredictiveScalingMaxCapacityBreachBehavior
    | string;
  MaxCapacityBuffer?: number;
}
export interface StepAdjustment {
  MetricIntervalLowerBound?: number;
  MetricIntervalUpperBound?: number;
  ScalingAdjustment: number | undefined;
}
export declare enum MetricStatistic {
  Average = "Average",
  Maximum = "Maximum",
  Minimum = "Minimum",
  SampleCount = "SampleCount",
  Sum = "Sum",
}
export interface CustomizedMetricSpecification {
  MetricName: string | undefined;
  Namespace: string | undefined;
  Dimensions?: MetricDimension[];
  Statistic: MetricStatistic | string | undefined;
  Unit?: string;
}
export declare enum MetricType {
  ALBRequestCountPerTarget = "ALBRequestCountPerTarget",
  ASGAverageCPUUtilization = "ASGAverageCPUUtilization",
  ASGAverageNetworkIn = "ASGAverageNetworkIn",
  ASGAverageNetworkOut = "ASGAverageNetworkOut",
}
export interface PredefinedMetricSpecification {
  PredefinedMetricType: MetricType | string | undefined;
  ResourceLabel?: string;
}
export interface TargetTrackingConfiguration {
  PredefinedMetricSpecification?: PredefinedMetricSpecification;
  CustomizedMetricSpecification?: CustomizedMetricSpecification;
  TargetValue: number | undefined;
  DisableScaleIn?: boolean;
}
export interface ScalingPolicy {
  AutoScalingGroupName?: string;
  PolicyName?: string;
  PolicyARN?: string;
  PolicyType?: string;
  AdjustmentType?: string;
  MinAdjustmentStep?: number;
  MinAdjustmentMagnitude?: number;
  ScalingAdjustment?: number;
  Cooldown?: number;
  StepAdjustments?: StepAdjustment[];
  MetricAggregationType?: string;
  EstimatedInstanceWarmup?: number;
  Alarms?: Alarm[];
  TargetTrackingConfiguration?: TargetTrackingConfiguration;
  Enabled?: boolean;
  PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}
export interface PoliciesType {
  ScalingPolicies?: ScalingPolicy[];
  NextToken?: string;
}
export interface DescribeScalingActivitiesType {
  ActivityIds?: string[];
  AutoScalingGroupName?: string;
  IncludeDeletedGroups?: boolean;
  MaxRecords?: number;
  NextToken?: string;
}
export interface ProcessType {
  ProcessName: string | undefined;
}
export interface ProcessesType {
  Processes?: ProcessType[];
}
export interface DescribeScheduledActionsType {
  AutoScalingGroupName?: string;
  ScheduledActionNames?: string[];
  StartTime?: Date;
  EndTime?: Date;
  NextToken?: string;
  MaxRecords?: number;
}
export interface ScheduledUpdateGroupAction {
  AutoScalingGroupName?: string;
  ScheduledActionName?: string;
  ScheduledActionARN?: string;
  Time?: Date;
  StartTime?: Date;
  EndTime?: Date;
  Recurrence?: string;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  TimeZone?: string;
}
export interface ScheduledActionsType {
  ScheduledUpdateGroupActions?: ScheduledUpdateGroupAction[];
  NextToken?: string;
}
export interface DescribeTagsType {
  Filters?: Filter[];
  NextToken?: string;
  MaxRecords?: number;
}
export interface TagsType {
  Tags?: TagDescription[];
  NextToken?: string;
}
export interface DescribeTerminationPolicyTypesAnswer {
  TerminationPolicyTypes?: string[];
}
export interface DescribeWarmPoolAnswer {
  WarmPoolConfiguration?: WarmPoolConfiguration;
  Instances?: Instance[];
  NextToken?: string;
}
export interface DescribeWarmPoolType {
  AutoScalingGroupName: string | undefined;
  MaxRecords?: number;
  NextToken?: string;
}
export interface DetachInstancesAnswer {
  Activities?: Activity[];
}
export interface DetachInstancesQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface DetachLoadBalancersResultType {}
export interface DetachLoadBalancersType {
  AutoScalingGroupName: string | undefined;
  LoadBalancerNames: string[] | undefined;
}
export interface DetachLoadBalancerTargetGroupsResultType {}
export interface DetachLoadBalancerTargetGroupsType {
  AutoScalingGroupName: string | undefined;
  TargetGroupARNs: string[] | undefined;
}
export interface DisableMetricsCollectionQuery {
  AutoScalingGroupName: string | undefined;
  Metrics?: string[];
}
export interface EnableMetricsCollectionQuery {
  AutoScalingGroupName: string | undefined;
  Metrics?: string[];
  Granularity: string | undefined;
}
export interface EnterStandbyAnswer {
  Activities?: Activity[];
}
export interface EnterStandbyQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface ExecutePolicyType {
  AutoScalingGroupName?: string;
  PolicyName: string | undefined;
  HonorCooldown?: boolean;
  MetricValue?: number;
  BreachThreshold?: number;
}
export interface ExitStandbyAnswer {
  Activities?: Activity[];
}
export interface ExitStandbyQuery {
  InstanceIds?: string[];
  AutoScalingGroupName: string | undefined;
}
export interface CapacityForecast {
  Timestamps: Date[] | undefined;
  Values: number[] | undefined;
}
export interface LoadForecast {
  Timestamps: Date[] | undefined;
  Values: number[] | undefined;
  MetricSpecification: PredictiveScalingMetricSpecification | undefined;
}
export interface GetPredictiveScalingForecastAnswer {
  LoadForecast: LoadForecast[] | undefined;
  CapacityForecast: CapacityForecast | undefined;
  UpdateTime: Date | undefined;
}
export interface GetPredictiveScalingForecastType {
  AutoScalingGroupName: string | undefined;
  PolicyName: string | undefined;
  StartTime: Date | undefined;
  EndTime: Date | undefined;
}
export interface PutLifecycleHookAnswer {}
export interface PutLifecycleHookType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleTransition?: string;
  RoleARN?: string;
  NotificationTargetARN?: string;
  NotificationMetadata?: string;
  HeartbeatTimeout?: number;
  DefaultResult?: string;
}
export interface PutNotificationConfigurationType {
  AutoScalingGroupName: string | undefined;
  TopicARN: string | undefined;
  NotificationTypes: string[] | undefined;
}
export interface PolicyARNType {
  PolicyARN?: string;
  Alarms?: Alarm[];
}
export interface PutScalingPolicyType {
  AutoScalingGroupName: string | undefined;
  PolicyName: string | undefined;
  PolicyType?: string;
  AdjustmentType?: string;
  MinAdjustmentStep?: number;
  MinAdjustmentMagnitude?: number;
  ScalingAdjustment?: number;
  Cooldown?: number;
  MetricAggregationType?: string;
  StepAdjustments?: StepAdjustment[];
  EstimatedInstanceWarmup?: number;
  TargetTrackingConfiguration?: TargetTrackingConfiguration;
  Enabled?: boolean;
  PredictiveScalingConfiguration?: PredictiveScalingConfiguration;
}
export interface PutScheduledUpdateGroupActionType {
  AutoScalingGroupName: string | undefined;
  ScheduledActionName: string | undefined;
  Time?: Date;
  StartTime?: Date;
  EndTime?: Date;
  Recurrence?: string;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  TimeZone?: string;
}
export interface PutWarmPoolAnswer {}
export interface PutWarmPoolType {
  AutoScalingGroupName: string | undefined;
  MaxGroupPreparedCapacity?: number;
  MinSize?: number;
  PoolState?: WarmPoolState | string;
  InstanceReusePolicy?: InstanceReusePolicy;
}
export interface RecordLifecycleActionHeartbeatAnswer {}
export interface RecordLifecycleActionHeartbeatType {
  LifecycleHookName: string | undefined;
  AutoScalingGroupName: string | undefined;
  LifecycleActionToken?: string;
  InstanceId?: string;
}
export interface ScalingProcessQuery {
  AutoScalingGroupName: string | undefined;
  ScalingProcesses?: string[];
}
export interface SetDesiredCapacityType {
  AutoScalingGroupName: string | undefined;
  DesiredCapacity: number | undefined;
  HonorCooldown?: boolean;
}
export interface SetInstanceHealthQuery {
  InstanceId: string | undefined;
  HealthStatus: string | undefined;
  ShouldRespectGracePeriod?: boolean;
}
export interface SetInstanceProtectionAnswer {}
export interface SetInstanceProtectionQuery {
  InstanceIds: string[] | undefined;
  AutoScalingGroupName: string | undefined;
  ProtectedFromScaleIn: boolean | undefined;
}
export declare class InstanceRefreshInProgressFault extends __BaseException {
  readonly name: "InstanceRefreshInProgressFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InstanceRefreshInProgressFault, __BaseException>
  );
}
export interface StartInstanceRefreshAnswer {
  InstanceRefreshId?: string;
}
export declare enum RefreshStrategy {
  Rolling = "Rolling",
}
export interface StartInstanceRefreshType {
  AutoScalingGroupName: string | undefined;
  Strategy?: RefreshStrategy | string;
  DesiredConfiguration?: DesiredConfiguration;
  Preferences?: RefreshPreferences;
}
export interface TerminateInstanceInAutoScalingGroupType {
  InstanceId: string | undefined;
  ShouldDecrementDesiredCapacity: boolean | undefined;
}
export interface UpdateAutoScalingGroupType {
  AutoScalingGroupName: string | undefined;
  LaunchConfigurationName?: string;
  LaunchTemplate?: LaunchTemplateSpecification;
  MixedInstancesPolicy?: MixedInstancesPolicy;
  MinSize?: number;
  MaxSize?: number;
  DesiredCapacity?: number;
  DefaultCooldown?: number;
  AvailabilityZones?: string[];
  HealthCheckType?: string;
  HealthCheckGracePeriod?: number;
  PlacementGroup?: string;
  VPCZoneIdentifier?: string;
  TerminationPolicies?: string[];
  NewInstancesProtectedFromScaleIn?: boolean;
  ServiceLinkedRoleARN?: string;
  MaxInstanceLifetime?: number;
  CapacityRebalance?: boolean;
  Context?: string;
  DesiredCapacityType?: string;
  DefaultInstanceWarmup?: number;
}
export declare const AcceleratorCountRequestFilterSensitiveLog: (
  obj: AcceleratorCountRequest
) => any;
export declare const AcceleratorTotalMemoryMiBRequestFilterSensitiveLog: (
  obj: AcceleratorTotalMemoryMiBRequest
) => any;
export declare const ActivityFilterSensitiveLog: (obj: Activity) => any;
export declare const ActivitiesTypeFilterSensitiveLog: (
  obj: ActivitiesType
) => any;
export declare const ActivityTypeFilterSensitiveLog: (obj: ActivityType) => any;
export declare const AdjustmentTypeFilterSensitiveLog: (
  obj: AdjustmentType
) => any;
export declare const AlarmFilterSensitiveLog: (obj: Alarm) => any;
export declare const AttachInstancesQueryFilterSensitiveLog: (
  obj: AttachInstancesQuery
) => any;
export declare const AttachLoadBalancersResultTypeFilterSensitiveLog: (
  obj: AttachLoadBalancersResultType
) => any;
export declare const AttachLoadBalancersTypeFilterSensitiveLog: (
  obj: AttachLoadBalancersType
) => any;
export declare const AttachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog: (
  obj: AttachLoadBalancerTargetGroupsResultType
) => any;
export declare const AttachLoadBalancerTargetGroupsTypeFilterSensitiveLog: (
  obj: AttachLoadBalancerTargetGroupsType
) => any;
export declare const FailedScheduledUpdateGroupActionRequestFilterSensitiveLog: (
  obj: FailedScheduledUpdateGroupActionRequest
) => any;
export declare const BatchDeleteScheduledActionAnswerFilterSensitiveLog: (
  obj: BatchDeleteScheduledActionAnswer
) => any;
export declare const BatchDeleteScheduledActionTypeFilterSensitiveLog: (
  obj: BatchDeleteScheduledActionType
) => any;
export declare const BatchPutScheduledUpdateGroupActionAnswerFilterSensitiveLog: (
  obj: BatchPutScheduledUpdateGroupActionAnswer
) => any;
export declare const ScheduledUpdateGroupActionRequestFilterSensitiveLog: (
  obj: ScheduledUpdateGroupActionRequest
) => any;
export declare const BatchPutScheduledUpdateGroupActionTypeFilterSensitiveLog: (
  obj: BatchPutScheduledUpdateGroupActionType
) => any;
export declare const CancelInstanceRefreshAnswerFilterSensitiveLog: (
  obj: CancelInstanceRefreshAnswer
) => any;
export declare const CancelInstanceRefreshTypeFilterSensitiveLog: (
  obj: CancelInstanceRefreshType
) => any;
export declare const CompleteLifecycleActionAnswerFilterSensitiveLog: (
  obj: CompleteLifecycleActionAnswer
) => any;
export declare const CompleteLifecycleActionTypeFilterSensitiveLog: (
  obj: CompleteLifecycleActionType
) => any;
export declare const LaunchTemplateSpecificationFilterSensitiveLog: (
  obj: LaunchTemplateSpecification
) => any;
export declare const LifecycleHookSpecificationFilterSensitiveLog: (
  obj: LifecycleHookSpecification
) => any;
export declare const InstancesDistributionFilterSensitiveLog: (
  obj: InstancesDistribution
) => any;
export declare const BaselineEbsBandwidthMbpsRequestFilterSensitiveLog: (
  obj: BaselineEbsBandwidthMbpsRequest
) => any;
export declare const MemoryGiBPerVCpuRequestFilterSensitiveLog: (
  obj: MemoryGiBPerVCpuRequest
) => any;
export declare const MemoryMiBRequestFilterSensitiveLog: (
  obj: MemoryMiBRequest
) => any;
export declare const NetworkBandwidthGbpsRequestFilterSensitiveLog: (
  obj: NetworkBandwidthGbpsRequest
) => any;
export declare const NetworkInterfaceCountRequestFilterSensitiveLog: (
  obj: NetworkInterfaceCountRequest
) => any;
export declare const TotalLocalStorageGBRequestFilterSensitiveLog: (
  obj: TotalLocalStorageGBRequest
) => any;
export declare const VCpuCountRequestFilterSensitiveLog: (
  obj: VCpuCountRequest
) => any;
export declare const InstanceRequirementsFilterSensitiveLog: (
  obj: InstanceRequirements
) => any;
export declare const LaunchTemplateOverridesFilterSensitiveLog: (
  obj: LaunchTemplateOverrides
) => any;
export declare const LaunchTemplateFilterSensitiveLog: (
  obj: LaunchTemplate
) => any;
export declare const MixedInstancesPolicyFilterSensitiveLog: (
  obj: MixedInstancesPolicy
) => any;
export declare const TagFilterSensitiveLog: (obj: Tag) => any;
export declare const CreateAutoScalingGroupTypeFilterSensitiveLog: (
  obj: CreateAutoScalingGroupType
) => any;
export declare const EbsFilterSensitiveLog: (obj: Ebs) => any;
export declare const BlockDeviceMappingFilterSensitiveLog: (
  obj: BlockDeviceMapping
) => any;
export declare const InstanceMonitoringFilterSensitiveLog: (
  obj: InstanceMonitoring
) => any;
export declare const InstanceMetadataOptionsFilterSensitiveLog: (
  obj: InstanceMetadataOptions
) => any;
export declare const CreateLaunchConfigurationTypeFilterSensitiveLog: (
  obj: CreateLaunchConfigurationType
) => any;
export declare const CreateOrUpdateTagsTypeFilterSensitiveLog: (
  obj: CreateOrUpdateTagsType
) => any;
export declare const DeleteAutoScalingGroupTypeFilterSensitiveLog: (
  obj: DeleteAutoScalingGroupType
) => any;
export declare const LaunchConfigurationNameTypeFilterSensitiveLog: (
  obj: LaunchConfigurationNameType
) => any;
export declare const DeleteLifecycleHookAnswerFilterSensitiveLog: (
  obj: DeleteLifecycleHookAnswer
) => any;
export declare const DeleteLifecycleHookTypeFilterSensitiveLog: (
  obj: DeleteLifecycleHookType
) => any;
export declare const DeleteNotificationConfigurationTypeFilterSensitiveLog: (
  obj: DeleteNotificationConfigurationType
) => any;
export declare const DeletePolicyTypeFilterSensitiveLog: (
  obj: DeletePolicyType
) => any;
export declare const DeleteScheduledActionTypeFilterSensitiveLog: (
  obj: DeleteScheduledActionType
) => any;
export declare const DeleteTagsTypeFilterSensitiveLog: (
  obj: DeleteTagsType
) => any;
export declare const DeleteWarmPoolAnswerFilterSensitiveLog: (
  obj: DeleteWarmPoolAnswer
) => any;
export declare const DeleteWarmPoolTypeFilterSensitiveLog: (
  obj: DeleteWarmPoolType
) => any;
export declare const DescribeAccountLimitsAnswerFilterSensitiveLog: (
  obj: DescribeAccountLimitsAnswer
) => any;
export declare const DescribeAdjustmentTypesAnswerFilterSensitiveLog: (
  obj: DescribeAdjustmentTypesAnswer
) => any;
export declare const FilterFilterSensitiveLog: (obj: Filter) => any;
export declare const AutoScalingGroupNamesTypeFilterSensitiveLog: (
  obj: AutoScalingGroupNamesType
) => any;
export declare const EnabledMetricFilterSensitiveLog: (
  obj: EnabledMetric
) => any;
export declare const InstanceFilterSensitiveLog: (obj: Instance) => any;
export declare const SuspendedProcessFilterSensitiveLog: (
  obj: SuspendedProcess
) => any;
export declare const TagDescriptionFilterSensitiveLog: (
  obj: TagDescription
) => any;
export declare const InstanceReusePolicyFilterSensitiveLog: (
  obj: InstanceReusePolicy
) => any;
export declare const WarmPoolConfigurationFilterSensitiveLog: (
  obj: WarmPoolConfiguration
) => any;
export declare const AutoScalingGroupFilterSensitiveLog: (
  obj: AutoScalingGroup
) => any;
export declare const AutoScalingGroupsTypeFilterSensitiveLog: (
  obj: AutoScalingGroupsType
) => any;
export declare const AutoScalingInstanceDetailsFilterSensitiveLog: (
  obj: AutoScalingInstanceDetails
) => any;
export declare const AutoScalingInstancesTypeFilterSensitiveLog: (
  obj: AutoScalingInstancesType
) => any;
export declare const DescribeAutoScalingInstancesTypeFilterSensitiveLog: (
  obj: DescribeAutoScalingInstancesType
) => any;
export declare const DescribeAutoScalingNotificationTypesAnswerFilterSensitiveLog: (
  obj: DescribeAutoScalingNotificationTypesAnswer
) => any;
export declare const DesiredConfigurationFilterSensitiveLog: (
  obj: DesiredConfiguration
) => any;
export declare const RefreshPreferencesFilterSensitiveLog: (
  obj: RefreshPreferences
) => any;
export declare const InstanceRefreshLivePoolProgressFilterSensitiveLog: (
  obj: InstanceRefreshLivePoolProgress
) => any;
export declare const InstanceRefreshWarmPoolProgressFilterSensitiveLog: (
  obj: InstanceRefreshWarmPoolProgress
) => any;
export declare const InstanceRefreshProgressDetailsFilterSensitiveLog: (
  obj: InstanceRefreshProgressDetails
) => any;
export declare const InstanceRefreshFilterSensitiveLog: (
  obj: InstanceRefresh
) => any;
export declare const DescribeInstanceRefreshesAnswerFilterSensitiveLog: (
  obj: DescribeInstanceRefreshesAnswer
) => any;
export declare const DescribeInstanceRefreshesTypeFilterSensitiveLog: (
  obj: DescribeInstanceRefreshesType
) => any;
export declare const LaunchConfigurationNamesTypeFilterSensitiveLog: (
  obj: LaunchConfigurationNamesType
) => any;
export declare const LaunchConfigurationFilterSensitiveLog: (
  obj: LaunchConfiguration
) => any;
export declare const LaunchConfigurationsTypeFilterSensitiveLog: (
  obj: LaunchConfigurationsType
) => any;
export declare const LifecycleHookFilterSensitiveLog: (
  obj: LifecycleHook
) => any;
export declare const DescribeLifecycleHooksAnswerFilterSensitiveLog: (
  obj: DescribeLifecycleHooksAnswer
) => any;
export declare const DescribeLifecycleHooksTypeFilterSensitiveLog: (
  obj: DescribeLifecycleHooksType
) => any;
export declare const DescribeLifecycleHookTypesAnswerFilterSensitiveLog: (
  obj: DescribeLifecycleHookTypesAnswer
) => any;
export declare const DescribeLoadBalancersRequestFilterSensitiveLog: (
  obj: DescribeLoadBalancersRequest
) => any;
export declare const LoadBalancerStateFilterSensitiveLog: (
  obj: LoadBalancerState
) => any;
export declare const DescribeLoadBalancersResponseFilterSensitiveLog: (
  obj: DescribeLoadBalancersResponse
) => any;
export declare const DescribeLoadBalancerTargetGroupsRequestFilterSensitiveLog: (
  obj: DescribeLoadBalancerTargetGroupsRequest
) => any;
export declare const LoadBalancerTargetGroupStateFilterSensitiveLog: (
  obj: LoadBalancerTargetGroupState
) => any;
export declare const DescribeLoadBalancerTargetGroupsResponseFilterSensitiveLog: (
  obj: DescribeLoadBalancerTargetGroupsResponse
) => any;
export declare const MetricGranularityTypeFilterSensitiveLog: (
  obj: MetricGranularityType
) => any;
export declare const MetricCollectionTypeFilterSensitiveLog: (
  obj: MetricCollectionType
) => any;
export declare const DescribeMetricCollectionTypesAnswerFilterSensitiveLog: (
  obj: DescribeMetricCollectionTypesAnswer
) => any;
export declare const NotificationConfigurationFilterSensitiveLog: (
  obj: NotificationConfiguration
) => any;
export declare const DescribeNotificationConfigurationsAnswerFilterSensitiveLog: (
  obj: DescribeNotificationConfigurationsAnswer
) => any;
export declare const DescribeNotificationConfigurationsTypeFilterSensitiveLog: (
  obj: DescribeNotificationConfigurationsType
) => any;
export declare const DescribePoliciesTypeFilterSensitiveLog: (
  obj: DescribePoliciesType
) => any;
export declare const MetricDimensionFilterSensitiveLog: (
  obj: MetricDimension
) => any;
export declare const MetricFilterSensitiveLog: (obj: Metric) => any;
export declare const MetricStatFilterSensitiveLog: (obj: MetricStat) => any;
export declare const MetricDataQueryFilterSensitiveLog: (
  obj: MetricDataQuery
) => any;
export declare const PredictiveScalingCustomizedCapacityMetricFilterSensitiveLog: (
  obj: PredictiveScalingCustomizedCapacityMetric
) => any;
export declare const PredictiveScalingCustomizedLoadMetricFilterSensitiveLog: (
  obj: PredictiveScalingCustomizedLoadMetric
) => any;
export declare const PredictiveScalingCustomizedScalingMetricFilterSensitiveLog: (
  obj: PredictiveScalingCustomizedScalingMetric
) => any;
export declare const PredictiveScalingPredefinedLoadMetricFilterSensitiveLog: (
  obj: PredictiveScalingPredefinedLoadMetric
) => any;
export declare const PredictiveScalingPredefinedMetricPairFilterSensitiveLog: (
  obj: PredictiveScalingPredefinedMetricPair
) => any;
export declare const PredictiveScalingPredefinedScalingMetricFilterSensitiveLog: (
  obj: PredictiveScalingPredefinedScalingMetric
) => any;
export declare const PredictiveScalingMetricSpecificationFilterSensitiveLog: (
  obj: PredictiveScalingMetricSpecification
) => any;
export declare const PredictiveScalingConfigurationFilterSensitiveLog: (
  obj: PredictiveScalingConfiguration
) => any;
export declare const StepAdjustmentFilterSensitiveLog: (
  obj: StepAdjustment
) => any;
export declare const CustomizedMetricSpecificationFilterSensitiveLog: (
  obj: CustomizedMetricSpecification
) => any;
export declare const PredefinedMetricSpecificationFilterSensitiveLog: (
  obj: PredefinedMetricSpecification
) => any;
export declare const TargetTrackingConfigurationFilterSensitiveLog: (
  obj: TargetTrackingConfiguration
) => any;
export declare const ScalingPolicyFilterSensitiveLog: (
  obj: ScalingPolicy
) => any;
export declare const PoliciesTypeFilterSensitiveLog: (obj: PoliciesType) => any;
export declare const DescribeScalingActivitiesTypeFilterSensitiveLog: (
  obj: DescribeScalingActivitiesType
) => any;
export declare const ProcessTypeFilterSensitiveLog: (obj: ProcessType) => any;
export declare const ProcessesTypeFilterSensitiveLog: (
  obj: ProcessesType
) => any;
export declare const DescribeScheduledActionsTypeFilterSensitiveLog: (
  obj: DescribeScheduledActionsType
) => any;
export declare const ScheduledUpdateGroupActionFilterSensitiveLog: (
  obj: ScheduledUpdateGroupAction
) => any;
export declare const ScheduledActionsTypeFilterSensitiveLog: (
  obj: ScheduledActionsType
) => any;
export declare const DescribeTagsTypeFilterSensitiveLog: (
  obj: DescribeTagsType
) => any;
export declare const TagsTypeFilterSensitiveLog: (obj: TagsType) => any;
export declare const DescribeTerminationPolicyTypesAnswerFilterSensitiveLog: (
  obj: DescribeTerminationPolicyTypesAnswer
) => any;
export declare const DescribeWarmPoolAnswerFilterSensitiveLog: (
  obj: DescribeWarmPoolAnswer
) => any;
export declare const DescribeWarmPoolTypeFilterSensitiveLog: (
  obj: DescribeWarmPoolType
) => any;
export declare const DetachInstancesAnswerFilterSensitiveLog: (
  obj: DetachInstancesAnswer
) => any;
export declare const DetachInstancesQueryFilterSensitiveLog: (
  obj: DetachInstancesQuery
) => any;
export declare const DetachLoadBalancersResultTypeFilterSensitiveLog: (
  obj: DetachLoadBalancersResultType
) => any;
export declare const DetachLoadBalancersTypeFilterSensitiveLog: (
  obj: DetachLoadBalancersType
) => any;
export declare const DetachLoadBalancerTargetGroupsResultTypeFilterSensitiveLog: (
  obj: DetachLoadBalancerTargetGroupsResultType
) => any;
export declare const DetachLoadBalancerTargetGroupsTypeFilterSensitiveLog: (
  obj: DetachLoadBalancerTargetGroupsType
) => any;
export declare const DisableMetricsCollectionQueryFilterSensitiveLog: (
  obj: DisableMetricsCollectionQuery
) => any;
export declare const EnableMetricsCollectionQueryFilterSensitiveLog: (
  obj: EnableMetricsCollectionQuery
) => any;
export declare const EnterStandbyAnswerFilterSensitiveLog: (
  obj: EnterStandbyAnswer
) => any;
export declare const EnterStandbyQueryFilterSensitiveLog: (
  obj: EnterStandbyQuery
) => any;
export declare const ExecutePolicyTypeFilterSensitiveLog: (
  obj: ExecutePolicyType
) => any;
export declare const ExitStandbyAnswerFilterSensitiveLog: (
  obj: ExitStandbyAnswer
) => any;
export declare const ExitStandbyQueryFilterSensitiveLog: (
  obj: ExitStandbyQuery
) => any;
export declare const CapacityForecastFilterSensitiveLog: (
  obj: CapacityForecast
) => any;
export declare const LoadForecastFilterSensitiveLog: (obj: LoadForecast) => any;
export declare const GetPredictiveScalingForecastAnswerFilterSensitiveLog: (
  obj: GetPredictiveScalingForecastAnswer
) => any;
export declare const GetPredictiveScalingForecastTypeFilterSensitiveLog: (
  obj: GetPredictiveScalingForecastType
) => any;
export declare const PutLifecycleHookAnswerFilterSensitiveLog: (
  obj: PutLifecycleHookAnswer
) => any;
export declare const PutLifecycleHookTypeFilterSensitiveLog: (
  obj: PutLifecycleHookType
) => any;
export declare const PutNotificationConfigurationTypeFilterSensitiveLog: (
  obj: PutNotificationConfigurationType
) => any;
export declare const PolicyARNTypeFilterSensitiveLog: (
  obj: PolicyARNType
) => any;
export declare const PutScalingPolicyTypeFilterSensitiveLog: (
  obj: PutScalingPolicyType
) => any;
export declare const PutScheduledUpdateGroupActionTypeFilterSensitiveLog: (
  obj: PutScheduledUpdateGroupActionType
) => any;
export declare const PutWarmPoolAnswerFilterSensitiveLog: (
  obj: PutWarmPoolAnswer
) => any;
export declare const PutWarmPoolTypeFilterSensitiveLog: (
  obj: PutWarmPoolType
) => any;
export declare const RecordLifecycleActionHeartbeatAnswerFilterSensitiveLog: (
  obj: RecordLifecycleActionHeartbeatAnswer
) => any;
export declare const RecordLifecycleActionHeartbeatTypeFilterSensitiveLog: (
  obj: RecordLifecycleActionHeartbeatType
) => any;
export declare const ScalingProcessQueryFilterSensitiveLog: (
  obj: ScalingProcessQuery
) => any;
export declare const SetDesiredCapacityTypeFilterSensitiveLog: (
  obj: SetDesiredCapacityType
) => any;
export declare const SetInstanceHealthQueryFilterSensitiveLog: (
  obj: SetInstanceHealthQuery
) => any;
export declare const SetInstanceProtectionAnswerFilterSensitiveLog: (
  obj: SetInstanceProtectionAnswer
) => any;
export declare const SetInstanceProtectionQueryFilterSensitiveLog: (
  obj: SetInstanceProtectionQuery
) => any;
export declare const StartInstanceRefreshAnswerFilterSensitiveLog: (
  obj: StartInstanceRefreshAnswer
) => any;
export declare const StartInstanceRefreshTypeFilterSensitiveLog: (
  obj: StartInstanceRefreshType
) => any;
export declare const TerminateInstanceInAutoScalingGroupTypeFilterSensitiveLog: (
  obj: TerminateInstanceInAutoScalingGroupType
) => any;
export declare const UpdateAutoScalingGroupTypeFilterSensitiveLog: (
  obj: UpdateAutoScalingGroupType
) => any;
